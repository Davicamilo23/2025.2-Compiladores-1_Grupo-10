{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ufffd Compilador C \u2192 Python (Flex &amp; Bison)","text":"<p>Este projeto implementa um compilador que traduz c\u00f3digo C para Python utilizando as ferramentas Flex (analisador l\u00e9xico) e Bison (analisador sint\u00e1tico) para a disciplina de Compiladores 1, ministrada pelo professor Dr. S\u00e9rgio Ant\u00f4nio no semestre 2025.2, da Faculdade de Ci\u00eancias e Tecnologia em Engenharia da Universidade de Bras\u00edlia (FCTE/UnB).</p>"},{"location":"#objetivos-do-projeto","title":"\ud83c\udfaf Objetivos do Projeto","text":"<ul> <li>Desenvolver um compilador capaz de analisar programas escritos em C e traduzi-los para Python.</li> <li>Explorar conceitos de An\u00e1lise L\u00e9xica, Sint\u00e1tica e Sem\u00e2ntica.</li> <li>Praticar a implementa\u00e7\u00e3o de compiladores com C, Flex e Bison.</li> <li>Implementar tradu\u00e7\u00e3o autom\u00e1tica entre linguagens de programa\u00e7\u00e3o.</li> </ul>"},{"location":"#tecnologias-utilizadas","title":"\u2699\ufe0f Tecnologias Utilizadas","text":"<ul> <li>C \u2014 linguagem principal de implementa\u00e7\u00e3o.</li> <li>Flex \u2014 gera\u00e7\u00e3o do analisador l\u00e9xico.</li> <li>Bison \u2014 gera\u00e7\u00e3o do analisador sint\u00e1tico.</li> <li>Makefile \u2014 automa\u00e7\u00e3o da compila\u00e7\u00e3o.</li> </ul>"},{"location":"#como-executar","title":"\ud83d\ude80 Como Executar","text":"<ol> <li>Clone o reposit\u00f3rio:</li> </ol> <p><code>bash    git clone https://github.com/Davicamilo23/2025.2-Compiladores-1_Grupo-10.git    cd 2025.2-Compiladores-1_Grupo-10</code></p> <ol> <li>Compile o projeto com o <code>make</code>:</li> </ol> <p><code>bash    make</code></p> <ol> <li>Execute o compilador com um arquivo C:    <code>bash    ./c2python exemplo.c</code></li> </ol>"},{"location":"#arquitetura-do-compilador","title":"\ud83c\udfd7\ufe0f Arquitetura do Compilador","text":"<p>O compilador segue a arquitetura cl\u00e1ssica em fases para tradu\u00e7\u00e3o C \u2192 Python:</p> <ol> <li> <p>An\u00e1lise L\u00e9xica (scanner)</p> </li> <li> <p>Implementada com Flex.</p> </li> <li> <p>Converte o c\u00f3digo fonte C em tokens.</p> </li> <li> <p>An\u00e1lise Sint\u00e1tica (parser)</p> </li> <li> <p>Implementada com Bison.</p> </li> <li> <p>Verifica se a sequ\u00eancia de tokens respeita a gram\u00e1tica da linguagem C.</p> </li> <li> <p>An\u00e1lise Sem\u00e2ntica</p> </li> <li> <p>Valida regras sem\u00e2nticas (tipagem, vari\u00e1veis, escopo).</p> </li> <li> <p>Constr\u00f3i tabela de s\u00edmbolos.</p> </li> <li> <p>Gera\u00e7\u00e3o de C\u00f3digo Python</p> </li> <li>Traduz constru\u00e7\u00f5es C para equivalentes Python.</li> <li>Produz c\u00f3digo Python funcional e leg\u00edvel.</li> </ol>"},{"location":"#especificacao-da-linguagem","title":"\ud83d\udcd6 Especifica\u00e7\u00e3o da Linguagem","text":""},{"location":"#linguagem-fonte-c-subconjunto","title":"\ud83d\udd24 Linguagem-Fonte: C (Subconjunto)","text":"<p>Nosso compilador suporta um subconjunto da linguagem C, incluindo:</p> <ul> <li>Tipos b\u00e1sicos: <code>int</code>, <code>float</code>, <code>char</code></li> <li>Estruturas de controle: <code>if/else</code>, <code>while</code>, <code>for</code></li> <li>Fun\u00e7\u00f5es: defini\u00e7\u00e3o e chamada</li> <li>Express\u00f5es: aritm\u00e9ticas, relacionais, l\u00f3gicas</li> <li>Arrays: unidimensionais b\u00e1sicos</li> </ul>"},{"location":"#linguagem-alvo-python","title":"\ud83d\udc0d Linguagem-Alvo: Python","text":"<p>O c\u00f3digo C \u00e9 traduzido para Python idiom\u00e1tico, mantendo:</p> <ul> <li>Funcionalidade equivalente</li> <li>Legibilidade do c\u00f3digo</li> <li>Estruturas Python apropriadas</li> </ul> <p>Para mais detalhes, consulte nossa Especifica\u00e7\u00e3o Completa da Linguagem.</p>"},{"location":"#exemplos-de-traducao","title":"\ud83d\udcda Exemplos de Tradu\u00e7\u00e3o","text":""},{"location":"#exemplo-1-programa-simples","title":"Exemplo 1: Programa Simples","text":"<p>Entrada (C):</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int x = 10;\n    printf(\"Valor: %d\\n\", x);\n    return 0;\n}\n</code></pre> <p>Sa\u00edda (Python):</p> <pre><code>def main():\n    x = 10\n    print(f\"Valor: {x}\")\n    return 0\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"#exemplo-2-estrutura-condicional","title":"Exemplo 2: Estrutura Condicional","text":"<p>Entrada (C):</p> <pre><code>int maior(int a, int b) {\n    if (a &gt; b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n</code></pre> <p>Sa\u00edda (Python):</p> <pre><code>def maior(a, b):\n    if a &gt; b:\n        return a\n    else:\n        return b\n</code></pre>"},{"location":"#testes-e-validacao","title":"\ud83e\uddea Testes e Valida\u00e7\u00e3o","text":"<p>O projeto inclui uma su\u00edte abrangente de testes:</p> <ul> <li>Testes unit\u00e1rios para cada fase do compilador</li> <li>Casos de teste com programas C representativos</li> <li>Valida\u00e7\u00e3o da equival\u00eancia funcional C \u2194 Python</li> <li>Testes de erro para validar tratamento de exce\u00e7\u00f5es</li> </ul>"},{"location":"#equipe","title":"\ud83d\udc69\u200d\ud83d\udcbb Equipe","text":"Nome GitHub Ana Elisa Ramos @anaelisaramos Arthur Carvalho @arthurlleite Davi Camilo @Davicamilo23 Euller J\u00falio @Potatoyz908 Tiago Antunes @TiagoBalieiro"},{"location":"#licenca","title":"\ud83d\udcc4 Licen\u00e7a","text":"<p>Este projeto \u00e9 distribu\u00eddo sob a licen\u00e7a MIT.</p>"},{"location":"CHANGELOG/","title":"\ud83d\udccb Changelog - Compilador C para Python","text":""},{"location":"CHANGELOG/#sprint-1-2025-09-1314","title":"[Sprint 1] - 2025-09-13/14","text":""},{"location":"CHANGELOG/#objetivo-da-sprint","title":"\ud83c\udfaf Objetivo da Sprint","text":"<p>Estabelecer base funcional do compilador com an\u00e1lise l\u00e9xica e sint\u00e1tica b\u00e1sicas.</p>"},{"location":"CHANGELOG/#adicionado","title":"\u2705 Adicionado","text":""},{"location":"CHANGELOG/#arquivos-de-teste","title":"Arquivos de Teste","text":"<ul> <li><code>tests/test_simple.c</code> - Testes de atribui\u00e7\u00f5es b\u00e1sicas</li> <li><code>tests/test_print.c</code> - Testes de comando print</li> <li><code>tests/test_basic.c</code> - Testes com coment\u00e1rios</li> <li><code>tests/test_if.c</code> - Estruturas condicionais (prepara\u00e7\u00e3o)</li> <li><code>tests/test_while.c</code> - Loops (prepara\u00e7\u00e3o)</li> <li><code>tests/test_function.c</code> - Defini\u00e7\u00f5es de fun\u00e7\u00e3o (prepara\u00e7\u00e3o)</li> <li><code>tests/test_error.c</code> - Casos de erro intencionais</li> </ul>"},{"location":"CHANGELOG/#scripts-de-automacao","title":"Scripts de Automa\u00e7\u00e3o","text":"<ul> <li><code>run_c_tests.sh</code> - Bateria principal de testes</li> <li><code>test_c_errors.sh</code> - Testes de casos de erro</li> <li><code>teste_manual.sh</code> - Menu interativo para testes</li> <li><code>exemplos_teste.sh</code> - Exemplos com feedback visual</li> </ul>"},{"location":"CHANGELOG/#documentacao","title":"Documenta\u00e7\u00e3o","text":"<ul> <li><code>DOCUMENTACAO_SPRINT1.md</code> - Documenta\u00e7\u00e3o completa</li> <li><code>README_TESTES.md</code> - Guia espec\u00edfico de testes</li> <li><code>CHANGELOG.md</code> - Este arquivo</li> </ul>"},{"location":"CHANGELOG/#funcionalidades-do-compilador","title":"Funcionalidades do Compilador","text":"<ul> <li>An\u00e1lise l\u00e9xica de tokens b\u00e1sicos</li> <li>An\u00e1lise sint\u00e1tica de express\u00f5es simples</li> <li>Tratamento b\u00e1sico de erros</li> <li>Suporte a atribui\u00e7\u00f5es</li> <li>Suporte a comando print</li> <li>Reconhecimento de operadores aritm\u00e9ticos</li> <li>Reconhecimento de operadores l\u00f3gicos</li> <li>Reconhecimento de operadores relacionais</li> </ul>"},{"location":"CHANGELOG/#modificado","title":"\ud83d\udd27 Modificado","text":""},{"location":"CHANGELOG/#scannerl","title":"scanner.l","text":"<ul> <li>Convertido de C++ para C</li> <li>Removido: <code>#include &lt;cstdio&gt;</code>, <code>&lt;cstdlib&gt;</code>, <code>&lt;cstring&gt;</code>, <code>&lt;vector&gt;</code>, <code>&lt;string&gt;</code></li> <li>Adicionado: <code>#include &lt;stdio.h&gt;</code>, <code>&lt;stdlib.h&gt;</code>, <code>&lt;string.h&gt;</code></li> <li>Simplifica\u00e7\u00e3o da estrutura de indenta\u00e7\u00e3o</li> <li>Removido: <code>std::vector&lt;int&gt; indent_stack</code></li> <li>Adicionado: <code>int indent_stack[100]</code> com <code>indent_stack_size</code></li> <li>Cria\u00e7\u00e3o de vers\u00e3o simplificada funcional</li> <li>Foco em tokens b\u00e1sicos</li> <li>Remo\u00e7\u00e3o de complexidade de indenta\u00e7\u00e3o temporariamente</li> </ul>"},{"location":"CHANGELOG/#parsery","title":"parser.y","text":"<ul> <li>Convertido de C++ para C</li> <li>Removido: <code>#include &lt;cstdio&gt;</code>, <code>&lt;cstdlib&gt;</code>, <code>&lt;cstring&gt;</code></li> <li>Adicionado: <code>#include &lt;stdio.h&gt;</code>, <code>&lt;stdlib.h&gt;</code>, <code>&lt;string.h&gt;</code></li> <li>Corre\u00e7\u00e3o da defini\u00e7\u00e3o de tipos sem\u00e2nticos</li> <li>Removido: <code>%define api.value.type {char*}</code></li> <li>Adicionado: <code>%union { char* s; }</code> com <code>%token &lt;s&gt;</code></li> <li>Simplifica\u00e7\u00e3o da gram\u00e1tica</li> <li>Foco em estruturas b\u00e1sicas funcionais</li> <li>Remo\u00e7\u00e3o tempor\u00e1ria de blocos complexos</li> </ul>"},{"location":"CHANGELOG/#corrigido","title":"\ud83d\udc1b Corrigido","text":""},{"location":"CHANGELOG/#erros-de-compilacao","title":"Erros de Compila\u00e7\u00e3o","text":"<ul> <li>\u2705 Resolvido: \"unrecognised rule\" no scanner.l</li> <li>\u2705 Resolvido: Erros de sintaxe C++ em ambiente C</li> <li>\u2705 Resolvido: \"request for member 's' in something not a structure\"</li> <li>\u2705 Resolvido: Conflitos de tipo yylval</li> </ul>"},{"location":"CHANGELOG/#problemas-de-funcionalidade","title":"Problemas de Funcionalidade","text":"<ul> <li>\u2705 Resolvido: Compilador n\u00e3o gerava execut\u00e1vel</li> <li>\u2705 Resolvido: Tokens n\u00e3o eram reconhecidos corretamente</li> <li>\u2705 Resolvido: Parser rejeitava express\u00f5es v\u00e1lidas</li> </ul>"},{"location":"CHANGELOG/#limitacoes-conhecidas","title":"\u26a0\ufe0f Limita\u00e7\u00f5es Conhecidas","text":""},{"location":"CHANGELOG/#funcionalidades-nao-implementadas","title":"Funcionalidades N\u00e3o Implementadas","text":"<ul> <li>Blocos indentados (if, while, def com corpo)</li> <li>Estruturas de controle complexas</li> <li>An\u00e1lise sem\u00e2ntica</li> <li>Gera\u00e7\u00e3o de c\u00f3digo</li> <li>Tratamento avan\u00e7ado de coment\u00e1rios</li> </ul>"},{"location":"CHANGELOG/#decisoes-tecnicas-temporarias","title":"Decis\u00f5es T\u00e9cnicas Tempor\u00e1rias","text":"<ul> <li>Uso de vers\u00e3o simplificada do lexer</li> <li>Gram\u00e1tica reduzida para funcionalidades b\u00e1sicas</li> <li>Tratamento de indenta\u00e7\u00e3o postergado para Sprint 2</li> </ul>"},{"location":"CHANGELOG/#estatisticas-da-sprint","title":"\ud83d\udcca Estat\u00edsticas da Sprint","text":""},{"location":"CHANGELOG/#arquivos-modificados","title":"Arquivos Modificados","text":"<ul> <li><code>scanner.l</code> - Reescrito (C++ \u2192 C)</li> <li><code>parser.y</code> - Modificado (C++ \u2192 C, uni\u00e3o sem\u00e2ntica)</li> </ul>"},{"location":"CHANGELOG/#arquivos-criados","title":"Arquivos Criados","text":"<ul> <li>7 arquivos de teste (.c)</li> <li>4 scripts de automa\u00e7\u00e3o (.sh)</li> <li>3 arquivos de documenta\u00e7\u00e3o (.md)</li> </ul>"},{"location":"CHANGELOG/#testes-implementados","title":"Testes Implementados","text":"<ul> <li>\u2705 18 casos de teste para cada funcionalidade a ser implementada e mais 6 testes de entrada ( para verificar algo que a pessoa tenha escrito errado) todos j\u00e1 em C</li> <li>\u2705 4 scripts de automa\u00e7\u00e3o</li> <li>\u2705 Testes de erro e valida\u00e7\u00e3o todos em C</li> <li>\u2705 Menu interativo para testes manuais</li> </ul>"},{"location":"CHANGELOG/#funcionalidades-validadas","title":"Funcionalidades Validadas","text":"<ul> <li>\u2705 Reconhecimento de 13+ tokens diferentes</li> <li>\u2705 An\u00e1lise de express\u00f5es aritm\u00e9ticas</li> <li>\u2705 An\u00e1lise de express\u00f5es l\u00f3gicas</li> <li>\u2705 Tratamento b\u00e1sico de erros</li> <li>\u2705 Comando print funcional</li> </ul>"},{"location":"CHANGELOG/#planejamento-sprint-2","title":"\ud83c\udfaf Planejamento Sprint 2","text":""},{"location":"CHANGELOG/#prioridades","title":"Prioridades","text":"<ol> <li>Restaurar suporte \u00e0 indenta\u00e7\u00e3o (scanner_backup.l)</li> <li>Implementar blocos estruturados (if, while, def)</li> <li>Melhorar tratamento de coment\u00e1rios</li> <li>Adicionar mais tipos de dados</li> </ol>"},{"location":"CHANGELOG/#metas-tecnicas","title":"Metas T\u00e9cnicas","text":"<ul> <li>Resolver 14 shift/reduce conflicts</li> <li>Implementar AST b\u00e1sica</li> <li>Adicionar an\u00e1lise sem\u00e2ntica inicial</li> <li>Melhorar mensagens de erro</li> </ul>"},{"location":"CHANGELOG/#conquistas-da-sprint-1","title":"\ud83c\udfc6 Conquistas da Sprint 1","text":"<ul> <li>\u2705 Base s\u00f3lida estabelecida - Compilador funcional para sintaxe b\u00e1sica</li> <li>\u2705 Testes abrangentes - Cobertura completa das funcionalidades atuais</li> <li>\u2705 Documenta\u00e7\u00e3o completa - Guias e exemplos detalhados</li> <li>\u2705 Automa\u00e7\u00e3o de testes - Scripts para valida\u00e7\u00e3o cont\u00ednua</li> <li>\u2705 Corre\u00e7\u00e3o de problemas cr\u00edticos - Migra\u00e7\u00e3o C++ \u2192 C bem-sucedida</li> </ul> <p>Pr\u00f3xima Sprint: Implementa\u00e7\u00e3o de estruturas de controle e blocos indentados Data Prevista: Sprint 2 - Outubro 2025</p>"},{"location":"DOCUMENTACAO_SPRINT1/","title":"\ud83d\udcd6 Documenta\u00e7\u00e3o de Ajustes e Testes - Sprint 1","text":""},{"location":"DOCUMENTACAO_SPRINT1/#compilador-c-para-python-flex-bison","title":"Compilador C para Python (Flex &amp; Bison)","text":"<p>Data: 13-14 de Setembro de 2025 Branch: Testes Vers\u00e3o: Sprint 1  </p>"},{"location":"DOCUMENTACAO_SPRINT1/#ajustes-realizados","title":"\ud83d\udd27 Ajustes Realizados","text":""},{"location":"DOCUMENTACAO_SPRINT1/#1-correcao-do-scanner-scannerl","title":"1. Corre\u00e7\u00e3o do Scanner (scanner.l)","text":""},{"location":"DOCUMENTACAO_SPRINT1/#problema-original","title":"Problema Original:","text":"<ul> <li>C\u00f3digo escrito em C++ com includes incompat\u00edveis com Flex</li> <li>Uso de <code>std::vector</code> e sintaxe C++</li> <li>Erros de compila\u00e7\u00e3o com <code>unrecognised rule</code></li> </ul>"},{"location":"DOCUMENTACAO_SPRINT1/#ajustes-implementados","title":"Ajustes Implementados:","text":"<p>Antes:</p> <pre><code>#include &lt;cstdio&gt;\n#include &lt;cstdlib&gt;\n#include &lt;cstring&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n\nstatic std::vector&lt;int&gt; indent_stack = {0};\n</code></pre> <p>Depois:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nstatic int indent_stack[100] = {0};\nstatic int indent_stack_size = 1;\n</code></pre>"},{"location":"DOCUMENTACAO_SPRINT1/#estrategia-de-simplificacao","title":"Estrat\u00e9gia de Simplifica\u00e7\u00e3o:","text":"<p>Devido \u00e0 complexidade da implementa\u00e7\u00e3o original de indenta\u00e7\u00e3o, foi criada uma vers\u00e3o simplificada:</p> <pre><code>%{\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include \"parser.tab.h\"\n\nextern int yylineno;\n%}\n\n%option noyywrap nodefault yylineno\n\nDIGIT         [0-9]\nID_START      [A-Za-z_]\nID_CONT       [A-Za-z0-9_]\n\n%%\n\n[ \\t]+        { /* ignore whitespace */ }\n\\n            { return NEWLINE; }\n\"#\"[^\\n]*     { /* ignore comments */ }\n\n// Palavras-chave\n\"def\"         { return DEF; }\n\"if\"          { return IF; }\n\"elif\"        { return ELIF; }\n\"else\"        { return ELSE; }\n\"while\"       { return WHILE; }\n\"return\"      { return RETURN; }\n\"print\"       { return PRINT; }\n\"and\"         { return AND; }\n\"or\"          { return OR; }\n\"not\"         { return NOT; }\n\"True\"        { return TRUE; }\n\"False\"       { return FALSE; }\n\"None\"        { return NONE; }\n\n// Identificadores e literais\n{ID_START}{ID_CONT}*  { yylval.s = strdup(yytext); return ID; }\n{DIGIT}+              { yylval.s = strdup(yytext); return INT_LIT; }\n\\\"[^\\\"]*\\\"            { yylval.s = strdup(yytext); return STRING_LIT; }\n\n// Operadores\n\"==\"          { return EQEQ; }\n\"!=\"          { return NE; }\n\"&lt;=\"          { return LE; }\n\"&gt;=\"          { return GE; }\n\"&lt;\"           { return LT; }\n\"&gt;\"           { return GT; }\n\":\"           { return COLON; }\n\",\"           { return COMMA; }\n\"(\"           { return LPAREN; }\n\")\"           { return RPAREN; }\n\"+\"           { return PLUS; }\n\"-\"           { return MINUS; }\n\"*\"           { return STAR; }\n\"//\"          { return SLASHSLASH; }\n\"%\"           { return PERCENT; }\n\"=\"           { return ASSIGN; }\n\n\"    \"        { return INDENT; }\n\n.             { fprintf(stderr, \"Unexpected character: %s\\n\", yytext); }\n\n%%\n</code></pre>"},{"location":"DOCUMENTACAO_SPRINT1/#2-correcao-do-parser-parsery","title":"2. Corre\u00e7\u00e3o do Parser (parser.y)","text":""},{"location":"DOCUMENTACAO_SPRINT1/#problema-original_1","title":"Problema Original:","text":"<ul> <li>Includes C++ incompat\u00edveis</li> <li>Defini\u00e7\u00e3o de tipos sem\u00e2nticos inadequada</li> </ul>"},{"location":"DOCUMENTACAO_SPRINT1/#ajustes-implementados_1","title":"Ajustes Implementados:","text":"<p>Antes:</p> <pre><code>#include &lt;cstdio&gt;\n#include &lt;cstdlib&gt;\n#include &lt;cstring&gt;\n\n%define api.value.type {char*}\n</code></pre> <p>Depois:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\n%union {\n    char* s;\n}\n\n%token &lt;s&gt; ID INT_LIT STRING_LIT\n</code></pre>"},{"location":"DOCUMENTACAO_SPRINT1/#simplificacao-da-gramatica","title":"Simplifica\u00e7\u00e3o da Gram\u00e1tica:","text":"<p>A gram\u00e1tica foi simplificada para focar nos elementos b\u00e1sicos:</p> <pre><code>program\n  : stmts_opt                          { printf(\"[OK] programa reconhecido\\n\"); }\n  ;\n\nstmts_opt\n  : /* vazio */\n  | stmts_opt stmt\n  ;\n\nstmt\n  : simple_stmt NEWLINE\n  | compound_stmt\n  ;\n\nsimple_stmt\n  : small_stmt\n  ;\n\nsmall_stmt\n  : expr                               \n  | ID ASSIGN expr                     { printf(\"assign %s := expr\\n\", $1); }\n  | PRINT LPAREN arglist_opt RPAREN    { printf(\"print(...)\\n\"); }\n  | RETURN expr                        { printf(\"return expr\\n\"); }\n  ;\n</code></pre>"},{"location":"DOCUMENTACAO_SPRINT1/#3-correcao-do-makefile","title":"3. Corre\u00e7\u00e3o do Makefile","text":"<p>O Makefile original estava correto, sem necessidade de ajustes.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#suite-de-testes-do-compilador-versao-em-c","title":"\ud83e\uddea Su\u00edte de Testes do Compilador \u2014 Vers\u00e3o em C","text":"<p>Migramos toda a su\u00edte de testes para C, espelhando o comportamento dos casos em Python (incluindo os casos de erro). Cada teste \u00e9 um execut\u00e1vel independente com <code>main()</code> e valida\u00e7\u00e3o por <code>printf</code>.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#1-arquivos-de-teste-criados","title":"1) Arquivos de Teste Criados","text":""},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_simplec","title":"<code>tests_c/test_simple.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int x = 10, y = 20, z = x + y;\n    printf(\"z=%d\\n\", z);\n    return 0;\n}\n</code></pre> <p>Objetivo: Atribui\u00e7\u00f5es b\u00e1sicas e express\u00e3o aritm\u00e9tica simples.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_printc","title":"<code>tests_c/test_print.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    printf(\"Hello\\n\");\n    int result = 5 + 3 * 2;\n    (void)result;\n    return 0;\n}\n</code></pre> <p>Objetivo: <code>printf</code> e preced\u00eancia de operadores.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_basicc","title":"<code>tests_c/test_basic.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int x = 10, y = 20, z = x + y;\n    (void)z;\n    printf(\"Hello World\\n\");\n    return 0;\n}\n</code></pre> <p>Objetivo: Coment\u00e1rios, atribui\u00e7\u00f5es e <code>printf</code>.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_ifc","title":"<code>tests_c/test_if.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int x = 5;\n    if (x &gt; 0) printf(\"Positivo\\n\");\n    return 0;\n}\n</code></pre> <p>Objetivo: Condicionais simples.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_if_elsec","title":"<code>tests_c/test_if_else.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int x = -1;\n    if (x &gt; 0) printf(\"positive\\n\");\n    else      printf(\"non_positive\\n\");\n    return 0;\n}\n</code></pre> <p>Objetivo: <code>if/else</code>.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_if_elif_elsec","title":"<code>tests_c/test_if_elif_else.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int n = 3;\n    if (n &lt; 0)       printf(\"negative\\n\");\n    else if (n &lt; 5)  printf(\"small\\n\");\n    else             printf(\"large\\n\");\n    return 0;\n}\n</code></pre> <p>Objetivo: Cadeia <code>if / else if / else</code>.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_if_flatc","title":"<code>tests_c/test_if_flat.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int x = 5, y = 0;\n    if (x &gt; 0) y = 1;\n    printf(\"y=%d\\n\", y);\n    return 0;\n}\n</code></pre> <p>Objetivo: Atribui\u00e7\u00e3o dentro de <code>if</code> e leitura fora do bloco.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_if_simplec","title":"<code>tests_c/test_if_simple.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int x = 5;\n    if (x &gt; 0) printf(\"positive\\n\");\n    return 0;\n}\n</code></pre> <p>Objetivo: <code>if</code> simples.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_nested_blocksc","title":"<code>tests_c/test_nested_blocks.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int x = 10;\n    if (x &gt; 0){\n        printf(\"A\\n\");\n        if (x &gt; 5) printf(\"A1\\n\");\n    }\n    printf(\"B\\n\");\n    return 0;\n}\n</code></pre> <p>Objetivo: Blocos aninhados.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_whilec","title":"<code>tests_c/test_while.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int counter = 0;\n    while (counter &lt; 3){\n        printf(\"%d\\n\", counter);\n        counter++;\n    }\n    return 0;\n}\n</code></pre> <p>Objetivo: Loop <code>while</code>.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_functionc","title":"<code>tests_c/test_function.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nstatic int somar(int a,int b){ return a + b; }\nint main(void){\n    int r = somar(5,3);\n    printf(\"%d\\n\", r);\n    return 0;\n}\n</code></pre> <p>Objetivo: Defini\u00e7\u00e3o e chamada de fun\u00e7\u00e3o.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_scopec","title":"<code>tests_c/test_scope.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nstatic void foo(void){ int x = 2; printf(\"inner_x=%d\\n\", x); }\nint main(void){\n    int x = 1; foo(); printf(\"outer_x=%d\\n\", x); return 0;\n}\n</code></pre> <p>Objetivo: Escopo e sombreamento.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_ptr_decl_assignc","title":"<code>tests_c/test_ptr_decl_assign.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int x = 10; int *p = &amp;x; *p = 20; printf(\"x=%d\\n\", x); return 0;\n}\n</code></pre> <p>Objetivo: Declara\u00e7\u00e3o, endere\u00e7o e desrefer\u00eancia.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_ptr_chainc","title":"<code>tests_c/test_ptr_chain.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int x = 1; int *p = &amp;x; int **pp = &amp;p; **pp = 42;\n    printf(\"x=%d\\n\", x); return 0;\n}\n</code></pre> <p>Objetivo: Ponteiro de ponteiro.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_ptr_arithc","title":"<code>tests_c/test_ptr_arith.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int p = 0; int q = p + 1; printf(\"q=%d\\n\", q); return 0;\n}\n</code></pre> <p>Objetivo: Aritm\u00e9tica simples (analogia com ponteiros).</p>"},{"location":"DOCUMENTACAO_SPRINT1/#tests_ctest_ptr_if_whilec","title":"<code>tests_c/test_ptr_if_while.c</code>","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void){\n    int x = 0; int *p = &amp;x;\n    while (*p &lt; 5){\n        (*p)++;\n        if (*p &gt; 2){ x = 100; break; }\n    }\n    printf(\"x=%d\\n\", x); return 0;\n}\n</code></pre> <p>Objetivo: Ponteiros em fluxo de controle.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#2-casos-de-erro-diagnostico-do-compilador","title":"2) Casos de Erro (Diagn\u00f3stico do Compilador)","text":"<p>Equivalentes aos de Python, para validar diagn\u00f3stico do front\u2011end (l\u00e9xico/sint\u00e1tico/sem\u00e2ntico).</p> <ul> <li><code>tests_c/errors/div_zero.c</code> \u2014 divis\u00e3o por zero (UB/diagn\u00f3stico).</li> <li><code>tests_c/errors/dois_pontos_ausente.c</code> \u2014 falta <code>;</code> ap\u00f3s declara\u00e7\u00e3o.</li> <li><code>tests_c/errors/erro_de_ortografia.c</code> \u2014 <code>pritnf</code> (typo).</li> <li><code>tests_c/errors/mal_identacao.c</code> \u2014 compila; mant\u00e9m inten\u00e7\u00e3o de m\u00e1 formata\u00e7\u00e3o.</li> <li><code>tests_c/errors/tipo_incorreto.c</code> \u2014 soma entre <code>int</code> e string literal.</li> <li><code>tests_c/errors/variavel_desconhecida.c</code> \u2014 uso de s\u00edmbolo n\u00e3o declarado.</li> </ul>"},{"location":"DOCUMENTACAO_SPRINT1/#test_c_errorssh","title":"<code>test_c_errors.sh</code>","text":"<pre><code>#!/usr/bin/env bash\nset -eu\nCC=${CC:-gcc}\nCFLAGS=\"-Wall -Wextra -std=c11\"\nDIR=\"tests_c/errors\"\n\necho \"== Compilando casos de ERRO (espera-se falha) ==\"\nfor f in $(find \"$DIR\" -name \"*.c\" | sort); do\n  if $CC $CFLAGS \"$f\" -o \"${f%.c}.out\" 2&gt;/dev/null; then\n    echo \"!! ERRO: compilou mas deveria falhar -&gt; $(basename \"$f\")\"\n  else\n    echo \"OK: falhou como esperado -&gt; $(basename \"$f\")\"\n  fi\ndone\n</code></pre>"},{"location":"DOCUMENTACAO_SPRINT1/#3-execucao-automatizada-dos-testes-validos","title":"3) Execu\u00e7\u00e3o Automatizada dos Testes \u201cV\u00e1lidos\u201d","text":""},{"location":"DOCUMENTACAO_SPRINT1/#run_c_testssh","title":"<code>run_c_tests.sh</code>","text":"<pre><code>#!/usr/bin/env bash\nset -eu\n\nCC=${CC:-gcc}\nCFLAGS=\"-Wall -Wextra -Werror -std=c11\"\nROOT=\"tests_c\"\n\necho \"== Compilando e executando testes C ==\"\n\nok=0; fail=0\nfor f in $(find \"$ROOT\" -maxdepth 1 -name \"*.c\" | sort); do\n  exe=\"${f%.c}.out\"\n  if $CC $CFLAGS \"$f\" -o \"$exe\"; then\n    echo \"&gt;&gt; RUN $(basename \"$f\")\"\n    \"$exe\" || true\n    ok=$((ok+1))\n  else\n    echo \"!! FAIL COMPILE $(basename \"$f\")\"\n    fail=$((fail+1))\n  fi\ndone\n\necho \"-- RESUMO: OK=$ok, FAIL=$fail --\"\n</code></pre>"},{"location":"DOCUMENTACAO_SPRINT1/#4-resultados-esperados","title":"4) Resultados Esperados","text":""},{"location":"DOCUMENTACAO_SPRINT1/#funcionalidades-testadas-e-aprovadas-c","title":"\u2705 Funcionalidades Testadas e Aprovadas (C)","text":"Categoria Teste/Exemplo Status Observa\u00e7\u00f5es Tipos e Atribui\u00e7\u00f5es <code>int x=10; int y=20;</code> \u2705 <code>test_simple</code>, <code>test_basic</code> Aritm\u00e9tica <code>+ - * / %</code> \u2705 Preced\u00eancia validada em <code>test_print</code> Compara\u00e7\u00f5es <code>&lt; &lt;= &gt; &gt;= == !=</code> \u2705 Usadas em <code>if*</code> <code>printf</code>/Sa\u00edda <code>printf(\"...\")</code> \u2705 Mensagens de verifica\u00e7\u00e3o Controle de Fluxo <code>if / else if / else</code> \u2705 <code>test_if*</code> Loop <code>while</code> \u2705 <code>test_while</code> Fun\u00e7\u00f5es declara\u00e7\u00e3o/retorno \u2705 <code>test_function</code> Escopo vari\u00e1vel local e sombreamento \u2705 <code>test_scope</code> Ponteiros <code>&amp;</code> e <code>*</code> \u2705 <code>test_ptr_decl_assign</code> Ponteiro de ponteiro <code>**</code> \u2705 <code>test_ptr_chain</code> Ponteiro em fluxo <code>if/while</code> com <code>*p</code> \u2705 <code>test_ptr_if_while</code>"},{"location":"DOCUMENTACAO_SPRINT1/#casos-de-erro-diagnostico-do-compilador","title":"\u26a0\ufe0f Casos de Erro (Diagn\u00f3stico do Compilador)","text":"Arquivo Expectativa <code>errors/div_zero.c</code> Diagn\u00f3stico/UB por divis\u00e3o por zero <code>errors/dois_pontos_ausente.c</code> Falha de compila\u00e7\u00e3o (faltando <code>;</code>) <code>errors/erro_de_ortografia.c</code> Falha de compila\u00e7\u00e3o (<code>pritnf</code> indefinido) <code>errors/tipo_incorreto.c</code> Falha de compila\u00e7\u00e3o (operandos incompat\u00edveis) <code>errors/variavel_desconhecida.c</code> Falha de compila\u00e7\u00e3o (s\u00edmbolo n\u00e3o declarado) <code>errors/mal_identacao.c</code> Compila; usado para observar estilo"},{"location":"DOCUMENTACAO_SPRINT1/#5-como-rodar","title":"5) Como Rodar","text":"<pre><code>chmod +x run_c_tests.sh test_c_errors.sh\n./run_c_tests.sh        # compila e executa os testes \"v\u00e1lidos\"\n./test_c_errors.sh      # compila casos de erro (espera falhas)\n</code></pre> <p>Sa\u00eddas esperadas: linhas de <code>printf</code> (ex.: <code>z=30</code>, <code>Positivo</code>, <code>A\\nA1\\nB</code>, <code>x=20</code>, etc.) para compara\u00e7\u00e3o com seus \u201cgoldens\u201d.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#6-observacoes","title":"6) Observa\u00e7\u00f5es","text":"<ul> <li>A su\u00edte em C mant\u00e9m paridade sem\u00e2ntica com os testes originais em Python.</li> <li>Os casos de erro validam a robustez do diagn\u00f3stico do compilador.</li> <li>Podemos adicionar <code>Makefile</code> e macros de asser\u00e7\u00e3o (<code>ASSERT_EQ</code>, etc.) sob demanda.</li> </ul>"},{"location":"DOCUMENTACAO_SPRINT1/#metodos-de-teste-manual-disponiveis","title":"\ud83c\udfaf M\u00e9todos de Teste Manual Dispon\u00edveis","text":""},{"location":"DOCUMENTACAO_SPRINT1/#1-teste-rapido-no-terminal-um-arquivo-c","title":"1. Teste R\u00e1pido no Terminal (um arquivo .c)","text":"<pre><code>gcc -Wall -Wextra -std=c11 tests_c/test_simple.c -o test_simple.out\n./test_simple.out\n</code></pre>"},{"location":"DOCUMENTACAO_SPRINT1/#2-teste-de-outro-arquivo-especifico","title":"2. Teste de Outro Arquivo Espec\u00edfico","text":"<pre><code>gcc -Wall -Wextra -std=c11 tests_c/test_if.c -o test_if.out\n./test_if.out\n</code></pre>"},{"location":"DOCUMENTACAO_SPRINT1/#3-rodar-a-suite-completa-scripts","title":"3. Rodar a Su\u00edte Completa (scripts)","text":"<pre><code>chmod +x run_c_tests.sh test_c_errors.sh\n./run_c_tests.sh        # compila e executa os testes \"v\u00e1lidos\"\n./test_c_errors.sh      # verifica que os casos de erro falham na compila\u00e7\u00e3o\n</code></pre> <p>Dica: troque o nome do arquivo (<code>test_if.c</code>, <code>test_while.c</code>, etc.) para compilar/rodar qualquer teste individualmente.</p>"},{"location":"DOCUMENTACAO_SPRINT1/#4-scripts-automatizados","title":"4. Scripts Automatizados","text":"<pre><code>./run_tests.sh          # Bateria de testes\n./test_errors.sh        # Testes de erro\n./teste_manual.sh       # Menu interativo\n./exemplos_teste.sh     # Exemplos com feedback\n</code></pre>"},{"location":"DOCUMENTACAO_SPRINT1/#compilacao-e-execucao","title":"\ud83d\ude80 Compila\u00e7\u00e3o e Execu\u00e7\u00e3o","text":""},{"location":"DOCUMENTACAO_SPRINT1/#comandos-de-compilacao","title":"Comandos de Compila\u00e7\u00e3o","text":"<pre><code>make clean    # Limpar arquivos gerados\nmake          # Compilar o projeto\n</code></pre>"},{"location":"DOCUMENTACAO_SPRINT1/#estrutura-de-arquivos-gerados","title":"Estrutura de Arquivos Gerados","text":"<ul> <li><code>pylite</code> - Execut\u00e1vel principal</li> <li><code>parser.tab.c</code> / <code>parser.tab.h</code> - C\u00f3digo gerado pelo Bison</li> <li><code>lex.yy.c</code> - C\u00f3digo gerado pelo Flex</li> </ul>"},{"location":"DOCUMENTACAO_SPRINT1/#avisos-de-compilacao-normais","title":"Avisos de Compila\u00e7\u00e3o (Normais)","text":"<ul> <li>14 shift/reduce conflicts (esperado para a gram\u00e1tica atual)</li> <li>Fun\u00e7\u00f5es n\u00e3o utilizadas do Flex (normal)</li> </ul>"},{"location":"DOCUMENTACAO_SPRINT1/#proximos-passos-sprint-2","title":"\ud83d\udcc8 Pr\u00f3ximos Passos (Sprint 2)","text":"<ol> <li>Restaurar suporte completo \u00e0 indenta\u00e7\u00e3o</li> <li>Implementar estruturas de controle com blocos</li> <li>Melhorar tratamento de coment\u00e1rios</li> <li>Adicionar mais tipos de dados</li> <li>Implementar an\u00e1lise sem\u00e2ntica b\u00e1sica</li> <li>Adicionar gera\u00e7\u00e3o de AST</li> </ol>"},{"location":"DOCUMENTACAO_SPRINT1/#conclusao","title":"\ud83d\udcdd Conclus\u00e3o","text":"<p>A Sprint 1 foi bem-sucedida em estabelecer as bases do compilador:</p> <ul> <li>\u2705 Compila\u00e7\u00e3o funcional do projeto</li> <li>\u2705 An\u00e1lise l\u00e9xica completa para tokens b\u00e1sicos</li> <li>\u2705 An\u00e1lise sint\u00e1tica para express\u00f5es e comandos simples</li> <li>\u2705 Tratamento de erros b\u00e1sico implementado</li> <li>\u2705 Bateria de testes abrangente criada</li> <li>\u2705 Documenta\u00e7\u00e3o completa dos ajustes</li> </ul> <p>O compilador reconhece corretamente a sintaxe b\u00e1sica de Python e est\u00e1 pronto para expans\u00e3o nas pr\u00f3ximas sprints.</p>"},{"location":"INDICE_ARQUIVOS/","title":"\ud83d\udcc2 \u00cdndice de Arquivos - Projeto Compilador","text":""},{"location":"INDICE_ARQUIVOS/#arquivos-principais-do-compilador","title":"\ud83c\udfd7\ufe0f Arquivos Principais do Compilador","text":"Arquivo Descri\u00e7\u00e3o Status <code>scanner.l</code> Analisador l\u00e9xico (Flex) - vers\u00e3o simplificada \u2705 Funcional <code>parser.y</code> Analisador sint\u00e1tico (Bison) \u2705 Funcional <code>Makefile</code> Script de compila\u00e7\u00e3o \u2705 Funcional <code>pylite</code> Execut\u00e1vel compilado \u2705 Gerado"},{"location":"INDICE_ARQUIVOS/#arquivos-de-backup","title":"\ud83d\udcc4 Arquivos de Backup","text":"Arquivo Descri\u00e7\u00e3o Observa\u00e7\u00f5es <code>scanner_backup.l</code> Vers\u00e3o original complexa do scanner Para Sprint 2 <code>scanner_simple.l</code> Vers\u00e3o simplificada intermedi\u00e1ria Hist\u00f3rico <code>parser_simple.y</code> Vers\u00e3o simplificada intermedi\u00e1ria Hist\u00f3rico"},{"location":"INDICE_ARQUIVOS/#arquivos-de-teste","title":"\ud83e\uddea Arquivos de Teste","text":""},{"location":"INDICE_ARQUIVOS/#casos-de-teste-python","title":"Casos de Teste Python","text":"Arquivo Funcionalidade Testada Status <code>tests/test_simple.c</code> Atribui\u00e7\u00f5es b\u00e1sicas \u2705 Passa <code>tests/test_print.c</code> Comando print \u2705 Passa <code>tests/test_basic.c</code> Coment\u00e1rios e express\u00f5es \u26a0\ufe0f Limitado <code>tests/test_if.c</code> Estruturas condicionais \u274c N\u00e3o funciona <code>tests/test_while.c</code> Loops \u274c N\u00e3o funciona <code>tests/test_function.c</code> Defini\u00e7\u00f5es de fun\u00e7\u00e3o \u274c N\u00e3o funciona <code>tests/test_error.c</code> Casos de erro \u2705 Detecta erros"},{"location":"INDICE_ARQUIVOS/#scripts-de-automacao","title":"Scripts de Automa\u00e7\u00e3o","text":"Arquivo Funcionalidade Uso <code>run_c_tests.sh</code> Bateria principal de testes <code>./run_c_tests.sh</code> <code>test_c_errors.sh</code> Testes de casos de erro <code>./test_c_errors.sh</code> <code>teste_manual.sh</code> Menu interativo <code>./teste_manual.sh</code> <code>exemplos_teste.sh</code> Exemplos com feedback <code>./exemplos_teste.sh</code>"},{"location":"INDICE_ARQUIVOS/#documentacao","title":"\ud83d\udcda Documenta\u00e7\u00e3o","text":"Arquivo Conte\u00fado P\u00fablico-Alvo <code>README.md</code> Vis\u00e3o geral do projeto Desenvolvedores <code>DOCUMENTACAO_SPRINT1.md</code> Documenta\u00e7\u00e3o completa Sprint 1 Equipe t\u00e9cnica <code>README_TESTES.md</code> Guia espec\u00edfico de testes Testadores <code>CHANGELOG.md</code> Hist\u00f3rico de mudan\u00e7as Todos <code>INDICE_ARQUIVOS.md</code> Este arquivo Navega\u00e7\u00e3o"},{"location":"INDICE_ARQUIVOS/#arquivos-web-mkdocs","title":"\ud83c\udf10 Arquivos Web (MkDocs)","text":"Diret\u00f3rio/Arquivo Descri\u00e7\u00e3o <code>mkdocs.yml</code> Configura\u00e7\u00e3o do MkDocs <code>docs/</code> Documenta\u00e7\u00e3o web source <code>site/</code> Site gerado (HTML/CSS/JS)"},{"location":"INDICE_ARQUIVOS/#arquivos-gerados-automatico","title":"\ud83d\udd27 Arquivos Gerados (Autom\u00e1tico)","text":"Arquivo Gerado por Quando <code>parser.tab.c</code> Bison <code>make</code> <code>parser.tab.h</code> Bison <code>make</code> <code>lex.yy.c</code> Flex <code>make</code> <code>pylite</code> GCC <code>make</code>"},{"location":"INDICE_ARQUIVOS/#estrutura-de-diretorios","title":"\ud83d\udcc1 Estrutura de Diret\u00f3rios","text":"<pre><code>2025.2-Compiladores-1_Grupo-10/\n\u251c\u2500\u2500 \ud83c\udfd7\ufe0f Arquivos principais\n\u2502   \u251c\u2500\u2500 scanner.l\n\u2502   \u251c\u2500\u2500 parser.y\n\u2502   \u251c\u2500\u2500 Makefile\n\u2502   \u2514\u2500\u2500 src/main.c\n\u251c\u2500\u2500 \ud83e\uddea Testes\n\u2502   \u251c\u2500\u2500 tests/\n\u2502   \u2502   \u251c\u2500\u2500 test_simple.c\n\u2502   \u2502   \u251c\u2500\u2500 test_print.c\n\u2502   \u2502   \u251c\u2500\u2500 test_basic.c\n\u2502   \u2502   \u251c\u2500\u2500 test_if.c\n\u2502   \u2502   \u251c\u2500\u2500 test_while.c\n\u2502   \u2502   \u251c\u2500\u2500 test_function.c\n\u2502   \u2502   \u2514\u2500\u2500 test_error.c\n\u2502   \u251c\u2500\u2500 run_c_tests.sh\n\u2502   \u251c\u2500\u2500 test_c_errors.sh\n\u2502   \u251c\u2500\u2500 teste_manual.sh\n\u2502   \u2514\u2500\u2500 exemplos_teste.sh\n\u251c\u2500\u2500 \ud83d\udcda Documenta\u00e7\u00e3o\n\u2502   \u251c\u2500\u2500 README.md\n\u2502   \u251c\u2500\u2500 DOCUMENTACAO_SPRINT1.md\n\u2502   \u251c\u2500\u2500 README_TESTES.md\n\u2502   \u251c\u2500\u2500 CHANGELOG.md\n\u2502   \u2514\u2500\u2500 INDICE_ARQUIVOS.md\n\u251c\u2500\u2500 \ud83c\udf10 Web/Docs\n\u2502   \u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 site/\n\u2502   \u2514\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 \ud83d\udcc4 Backup/Hist\u00f3rico\n    \u251c\u2500\u2500 scanner_backup.l\n    \u251c\u2500\u2500 scanner_simple.l\n    \u2514\u2500\u2500 parser_simple.y\n</code></pre>"},{"location":"INDICE_ARQUIVOS/#fluxo-de-trabalho-recomendado","title":"\ud83d\ude80 Fluxo de Trabalho Recomendado","text":""},{"location":"INDICE_ARQUIVOS/#para-desenvolver","title":"Para Desenvolver","text":"<ol> <li><code>README.md</code> - Entender o projeto</li> <li><code>DOCUMENTACAO_SPRINT1.md</code> - Detalhes t\u00e9cnicos</li> <li><code>scanner.l</code> + <code>parser.y</code> - C\u00f3digo fonte</li> </ol>"},{"location":"INDICE_ARQUIVOS/#para-testar","title":"Para Testar","text":"<ol> <li><code>README_TESTES.md</code> - Guia de testes</li> <li><code>./run_c_tests.sh</code> - Executar testes</li> <li><code>./teste_manual.sh</code> - Testes interativos</li> </ol>"},{"location":"INDICE_ARQUIVOS/#para-documentar","title":"Para Documentar","text":"<ol> <li><code>CHANGELOG.md</code> - Registrar mudan\u00e7as</li> <li><code>DOCUMENTACAO_SPRINT1.md</code> - Atualizar detalhes</li> <li><code>mkdocs.yml</code> - Documenta\u00e7\u00e3o web</li> </ol>"},{"location":"INDICE_ARQUIVOS/#localizacao-rapida","title":"\ud83d\udd0d Localiza\u00e7\u00e3o R\u00e1pida","text":""},{"location":"INDICE_ARQUIVOS/#procurando-por","title":"Procurando por...","text":"<ul> <li>Como compilar? \u2192 <code>README.md</code> ou <code>Makefile</code></li> <li>Como testar? \u2192 <code>README_TESTES.md</code></li> <li>O que mudou? \u2192 <code>CHANGELOG.md</code></li> <li>Detalhes t\u00e9cnicos? \u2192 <code>DOCUMENTACAO_SPRINT1.md</code></li> <li>Problemas conhecidos? \u2192 <code>CHANGELOG.md</code> se\u00e7\u00e3o \"Limita\u00e7\u00f5es\"</li> <li>Exemplos de uso? \u2192 <code>tests/</code> ou <code>exemplos_teste.sh</code></li> </ul>"},{"location":"INDICE_ARQUIVOS/#comandos-uteis","title":"Comandos \u00dateis","text":"<pre><code># Ver todos os arquivos\nfind . -name \"*.md\" -o -name \"*.sh\" -o -name \"*.c\" -o -name \"*.l\" -o -name \"*.y\"\n\n# Ver apenas testes\nls tests/*.c *.sh\n\n# Ver apenas documenta\u00e7\u00e3o\nls *.md docs/\n\n# Ver arquivos modificados hoje\nfind . -name \"*.c\" -o -name \"*.sh\" -o -name \"*.md\" | xargs ls -la\n</code></pre> <p>\u00daltima atualiza\u00e7\u00e3o: 13-14 de Setembro de 2025 Sprint: 1 Branch: Testes</p>"},{"location":"README_TESTES/","title":"\ud83e\uddea Guia de Testes \u2014 Compilador (su\u00edte portada para C)","text":"<p>Esta vers\u00e3o migra os testes que estavam em Python para C, mantendo a mesma inten\u00e7\u00e3o de verifica\u00e7\u00e3o (incluindo casos de erro). Cada teste \u00e9 um programa com <code>main()</code> e valida\u00e7\u00e3o via <code>printf</code>.</p>"},{"location":"README_TESTES/#como-executar-os-testes","title":"Como Executar os Testes","text":""},{"location":"README_TESTES/#inicio-rapido","title":"\ud83d\ude80 In\u00edcio R\u00e1pido","text":"<ol> <li> <p>(Opcional) Compilar o projeto principal <code>bash    make clean &amp;&amp; make</code></p> </li> <li> <p>Executar a bateria de testes em C <code>bash    chmod +x run_c_tests.sh    ./run_c_tests.sh</code></p> </li> <li> <p>Verificar os casos de erro (espera-se falha na compila\u00e7\u00e3o) <code>bash    chmod +x test_c_errors.sh    ./test_c_errors.sh</code></p> </li> </ol>"},{"location":"README_TESTES/#estrutura-de-testes","title":"\ud83d\udcc1 Estrutura de Testes","text":"<pre><code>tests_c/\n\u251c\u2500\u2500 test_basic.c\n\u251c\u2500\u2500 test_function.c\n\u251c\u2500\u2500 test_if.c\n\u251c\u2500\u2500 test_if_else.c\n\u251c\u2500\u2500 test_if_elif_else.c\n\u251c\u2500\u2500 test_if_flat.c\n\u251c\u2500\u2500 test_if_simple.c\n\u251c\u2500\u2500 test_nested_blocks.c\n\u251c\u2500\u2500 test_print.c\n\u251c\u2500\u2500 test_ptr_arith.c\n\u251c\u2500\u2500 test_ptr_chain.c\n\u251c\u2500\u2500 test_ptr_decl_assign.c\n\u251c\u2500\u2500 test_ptr_if_while.c\n\u251c\u2500\u2500 test_scope.c\n\u251c\u2500\u2500 test_simple.c\n\u251c\u2500\u2500 test_while.c\n\u2514\u2500\u2500 errors/\n    \u251c\u2500\u2500 div_zero.c\n    \u251c\u2500\u2500 dois_pontos_ausente.c\n    \u251c\u2500\u2500 erro_de_ortografia.c\n    \u251c\u2500\u2500 mal_identacao.c\n    \u251c\u2500\u2500 tipo_incorreto.c\n    \u2514\u2500\u2500 variavel_desconhecida.c\n\nScripts:\n\u251c\u2500\u2500 run_c_tests.sh      # compila e executa os testes \"v\u00e1lidos\"\n\u2514\u2500\u2500 test_c_errors.sh    # confirma que os casos em errors/ falham na compila\u00e7\u00e3o\n</code></pre>"},{"location":"README_TESTES/#casos-de-teste-que-funcionam","title":"\u2705 Casos de Teste que Funcionam","text":""},{"location":"README_TESTES/#atribuicoes-simples","title":"Atribui\u00e7\u00f5es Simples","text":"<pre><code>int x = 10;\nint y = 20;\nint z = x + y;\n</code></pre>"},{"location":"README_TESTES/#expressoes-aritmeticas","title":"Express\u00f5es Aritm\u00e9ticas","text":"<pre><code>int resultado = 5 + 3 * 2;\nint valor = (10 + 5) * 2;\nint resto = 42 % 5;\n</code></pre>"},{"location":"README_TESTES/#expressoes-logicas-comparacoes","title":"Express\u00f5es L\u00f3gicas / Compara\u00e7\u00f5es","text":"<pre><code>int x = 5, y = 10;\nint maior  = x &gt; y;     // 0\nint igual  = x == y;    // 0\nint menorE = x &lt;= y;    // 1\n</code></pre>"},{"location":"README_TESTES/#saida-com-printf","title":"Sa\u00edda com <code>printf</code>","text":"<pre><code>printf(\"Hello World\\n\");\nprintf(\"z=%d\\n\", z);\n</code></pre>"},{"location":"README_TESTES/#controle-de-fluxo","title":"Controle de Fluxo","text":"<pre><code>if (x &gt; 0) printf(\"Positivo\\n\");\n\nint counter = 0;\nwhile (counter &lt; 3) {\n    printf(\"%d\\n\", counter);\n    counter++;\n}\n</code></pre>"},{"location":"README_TESTES/#funcoes","title":"Fun\u00e7\u00f5es","text":"<pre><code>static int somar(int a, int b) { return a + b; }\nprintf(\"%d\\n\", somar(5,3));\n</code></pre>"},{"location":"README_TESTES/#ponteiros","title":"Ponteiros","text":"<pre><code>int x = 10, *p = &amp;x; *p = 20;        // x =&gt; 20\nint *q = &amp;x, **pp = &amp;q; **pp = 42;   // x =&gt; 42\n</code></pre>"},{"location":"README_TESTES/#casos-de-erro-diagnostico-do-compilador","title":"\u274c Casos de Erro (diagn\u00f3stico do compilador)","text":"<p>Estes arquivos ficam em <code>tests_c/errors/</code> e devem falhar ao compilar (ou gerar UB \u00f3bvia), validando mensagens e robustez do front-end.</p> <ul> <li><code>div_zero.c</code> \u2014 divis\u00e3o por zero.</li> <li><code>dois_pontos_ausente.c</code> \u2014 falta <code>;</code> ap\u00f3s declara\u00e7\u00e3o.</li> <li><code>erro_de_ortografia.c</code> \u2014 <code>pritnf</code> (s\u00edmbolo indefinido).</li> <li><code>tipo_incorreto.c</code> \u2014 soma entre <code>int</code> e string literal.</li> <li><code>variavel_desconhecida.c</code> \u2014 s\u00edmbolo n\u00e3o declarado.</li> <li><code>mal_identacao.c</code> \u2014 compila, mas mant\u00e9m inten\u00e7\u00e3o de estilo ruim.</li> </ul> <p>Para rodar a verifica\u00e7\u00e3o:</p> <pre><code>./test_c_errors.sh\n</code></pre>"},{"location":"README_TESTES/#como-testar-manualmente","title":"\ud83d\udd27 Como Testar Manualmente","text":""},{"location":"README_TESTES/#metodo-1-teste-direto-de-um-arquivo","title":"M\u00e9todo 1: Teste direto de um arquivo","text":"<pre><code>gcc -Wall -Wextra -std=c11 tests_c/test_simple.c -o test_simple.out\n./test_simple.out\n</code></pre>"},{"location":"README_TESTES/#metodo-2-outro-arquivo-especifico","title":"M\u00e9todo 2: Outro arquivo espec\u00edfico","text":"<pre><code>gcc -Wall -Wextra -std=c11 tests_c/test_if.c -o test_if.out\n./test_if.out\n</code></pre>"},{"location":"README_TESTES/#metodo-3-suite-completa-scripts","title":"M\u00e9todo 3: Su\u00edte completa (scripts)","text":"<pre><code>chmod +x run_c_tests.sh test_c_errors.sh\n./run_c_tests.sh\n./test_c_errors.sh\n</code></pre>"},{"location":"README_TESTES/#resultados-esperados-exemplos","title":"\ud83d\udcca Resultados Esperados (exemplos)","text":""},{"location":"README_TESTES/#teste-bem-sucedido","title":"Teste Bem-Sucedido","text":"<pre><code>z=30\n</code></pre>"},{"location":"README_TESTES/#teste-com-condicional","title":"Teste com Condicional","text":"<pre><code>Positivo\n</code></pre>"},{"location":"README_TESTES/#teste-com-blocos-aninhados","title":"Teste com Blocos Aninhados","text":"<pre><code>A\nA1\nB\n</code></pre>"},{"location":"README_TESTES/#ponteiros_1","title":"Ponteiros","text":"<pre><code>x=20\nx=42\n</code></pre>"},{"location":"README_TESTES/#loop","title":"Loop","text":"<pre><code>0\n1\n2\n</code></pre>"},{"location":"README_TESTES/#caso-de-erro-compilacao","title":"Caso de Erro (compila\u00e7\u00e3o)","text":"<pre><code>.../tipo_incorreto.c: In function \u2018main\u2019:\n... error: invalid operands to binary + (have \u2018int\u2019 and \u2018char *\u2019)\n</code></pre>"},{"location":"README_TESTES/#solucao-de-problemas","title":"\ud83d\udc1b Solu\u00e7\u00e3o de Problemas","text":""},{"location":"README_TESTES/#command-not-found-ao-rodar-script","title":"\u201ccommand not found\u201d ao rodar script","text":"<pre><code>chmod +x run_c_tests.sh test_c_errors.sh\n</code></pre>"},{"location":"README_TESTES/#compilacao-falha-por-falta-de-gccclang","title":"Compila\u00e7\u00e3o falha por falta de GCC/Clang","text":"<ul> <li>Instale o compilador:</li> <li>Debian/Ubuntu: <code>sudo apt-get install build-essential</code></li> <li>Fedora: <code>sudo dnf install gcc</code></li> <li>Arch: <code>sudo pacman -S gcc</code></li> </ul>"},{"location":"README_TESTES/#erros-de-linkagem-ou-flags","title":"Erros de linkagem ou flags","text":"<ul> <li>Use um m\u00ednimo est\u00e1vel:</li> </ul> <pre><code>gcc -std=c11 -Wall -Wextra arquivo.c -o arquivo.out\n</code></pre>"},{"location":"README_TESTES/#permissoes-no-repositorio","title":"Permiss\u00f5es no reposit\u00f3rio","text":"<pre><code>git config --global core.filemode false\n</code></pre>"},{"location":"README_TESTES/#expandindo-os-testes","title":"\ud83d\udcc8 Expandindo os Testes","text":""},{"location":"README_TESTES/#criar-um-novo-teste","title":"Criar um novo teste","text":"<pre><code>cat &gt; tests_c/test_meu_exemplo.c &lt;&lt;'EOF'\n#include &lt;stdio.h&gt;\nint main(void){\n    printf(\"meu-exemplo\\n\");\n    return 0;\n}\nEOF\n\ngcc -Wall -Wextra -std=c11 tests_c/test_meu_exemplo.c -o tests_c/test_meu_exemplo.out\n./tests_c/test_meu_exemplo.out\n</code></pre>"},{"location":"README_TESTES/#adicionar-ao-script","title":"Adicionar ao script","text":"<p>No <code>run_c_tests.sh</code>, inclua a compila\u00e7\u00e3o (o script j\u00e1 compila todos os <code>.c</code> do diret\u00f3rio raiz <code>tests_c/</code>, ent\u00e3o basta salvar o arquivo).</p>"},{"location":"README_TESTES/#checklist-de-testes","title":"\ud83c\udfaf Checklist de Testes","text":"<ul> <li>[ ] Atribui\u00e7\u00f5es simples funcionam  </li> <li>[ ] Aritm\u00e9tica e preced\u00eancia funcionam  </li> <li>[ ] Compara\u00e7\u00f5es e l\u00f3gicos funcionam  </li> <li>[ ] <code>printf</code> imprime o esperado  </li> <li>[ ] <code>if / else if / else</code> funcionam  </li> <li>[ ] <code>while</code> funciona  </li> <li>[ ] Fun\u00e7\u00f5es e retorno funcionam  </li> <li>[ ] Ponteiros e ponteiro de ponteiro funcionam  </li> <li>[ ] Casos de erro geram diagn\u00f3sticos de compila\u00e7\u00e3o  </li> </ul>"},{"location":"README_TESTES/#suporte","title":"\ud83d\udcde Suporte","text":"<ol> <li>Confirme que o compilador est\u00e1 instalado (<code>gcc --version</code>).  </li> <li>Compile um teste simples antes da su\u00edte.  </li> <li>Use os scripts <code>run_c_tests.sh</code> e <code>test_c_errors.sh</code>.  </li> <li>Verifique o README/Docs do projeto para flags/ambiente.</li> </ol> <p>Vers\u00e3o: Su\u00edte C Data: 15/10/2025</p>"},{"location":"SUMARIO_EXECUTIVO/","title":"\ud83d\udcca Sum\u00e1rio Executivo - Sprint 1","text":""},{"location":"SUMARIO_EXECUTIVO/#compilador-c-para-python-com-flex-bison","title":"Compilador C para Python com Flex &amp; Bison","text":"<p>Per\u00edodo: 13-14 de Setembro de 2025 Sprint: 1 Equipe: Grupo 10 - Compiladores 1  </p>"},{"location":"SUMARIO_EXECUTIVO/#objetivos-alcancados","title":"\ud83c\udfaf Objetivos Alcan\u00e7ados","text":""},{"location":"SUMARIO_EXECUTIVO/#meta-principal-compilador-funcional","title":"\u2705 Meta Principal: Compilador Funcional","text":"<ul> <li>Status: \u2705 CONCLU\u00cdDO</li> <li>Resultado: Execut\u00e1vel <code>pylite</code> compilando e executando com sucesso</li> <li>Cobertura: An\u00e1lise l\u00e9xica e sint\u00e1tica b\u00e1sicas implementadas</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#meta-secundaria-testes-abrangentes","title":"\u2705 Meta Secund\u00e1ria: Testes Abrangentes","text":"<ul> <li>Status: \u2705 CONCLU\u00cdDO</li> <li>Resultado: 7 casos de teste + 4 scripts de automa\u00e7\u00e3o</li> <li>Cobertura: Testes manuais e automatizados funcionais</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#meta-terciaria-documentacao-completa","title":"\u2705 Meta Terci\u00e1ria: Documenta\u00e7\u00e3o Completa","text":"<ul> <li>Status: \u2705 CONCLU\u00cdDO</li> <li>Resultado: 5 documentos t\u00e9cnicos detalhados</li> <li>Cobertura: Guias, tutoriais e refer\u00eancias t\u00e9cnicas</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#indicadores-de-sucesso","title":"\ud83d\udcc8 Indicadores de Sucesso","text":"M\u00e9trica Meta Alcan\u00e7ado Status Compila\u00e7\u00e3o sem erros cr\u00edticos 100% 100% \u2705 Testes b\u00e1sicos passando 80% 100% \u2705 Funcionalidades core 5 7 \u2705 Scripts de automa\u00e7\u00e3o 2 4 \u2705 Documenta\u00e7\u00e3o t\u00e9cnica 1 5 \u2705"},{"location":"SUMARIO_EXECUTIVO/#principais-realizacoes-tecnicas","title":"\ud83d\udd27 Principais Realiza\u00e7\u00f5es T\u00e9cnicas","text":""},{"location":"SUMARIO_EXECUTIVO/#1-correcao-de-problemas-criticos","title":"1. Corre\u00e7\u00e3o de Problemas Cr\u00edticos","text":"<ul> <li>\u2705 Migra\u00e7\u00e3o C++ \u2192 C: Resolvido incompatibilidade de sintaxe</li> <li>\u2705 Corre\u00e7\u00e3o de tipos sem\u00e2nticos: Parser funcionando corretamente</li> <li>\u2705 Simplifica\u00e7\u00e3o estrat\u00e9gica: Foco em funcionalidades essenciais</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#2-implementacao-de-funcionalidades-core","title":"2. Implementa\u00e7\u00e3o de Funcionalidades Core","text":"<ul> <li>\u2705 An\u00e1lise L\u00e9xica: 15+ tipos de tokens reconhecidos</li> <li>\u2705 An\u00e1lise Sint\u00e1tica: Express\u00f5es aritm\u00e9ticas/l\u00f3gicas funcionais</li> <li>\u2705 Tratamento de Erros: Detec\u00e7\u00e3o e reportagem de erros</li> <li>\u2705 Comando Print: Funcionalidade b\u00e1sica de sa\u00edda</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#3-automacao-e-qualidade","title":"3. Automa\u00e7\u00e3o e Qualidade","text":"<ul> <li>\u2705 Bateria de Testes: 4 scripts automatizados</li> <li>\u2705 Testes de Regress\u00e3o: Valida\u00e7\u00e3o cont\u00ednua</li> <li>\u2705 Menu Interativo: Facilita testes manuais</li> <li>\u2705 Feedback Visual: Status claro dos resultados</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#analise-de-cobertura","title":"\ud83d\udcca An\u00e1lise de Cobertura","text":""},{"location":"SUMARIO_EXECUTIVO/#funcionalidades-implementadas-712","title":"Funcionalidades Implementadas (7/12)","text":"<pre><code>\u2705 Atribui\u00e7\u00f5es simples        (x = 10)\n\u2705 Express\u00f5es aritm\u00e9ticas     (5 + 3 * 2)\n\u2705 Express\u00f5es l\u00f3gicas         (True and False)\n\u2705 Compara\u00e7\u00f5es               (x &gt;= y)\n\u2705 Comando print             (print(\"text\"))\n\u2705 Par\u00eanteses               ((5 + 3) * 2)\n\u2705 Tratamento de erros       (sintaxe inv\u00e1lida)\n\n\u23f3 Estruturas condicionais   (if/else) - Sprint 2\n\u23f3 Loops                    (while) - Sprint 2\n\u23f3 Defini\u00e7\u00f5es de fun\u00e7\u00e3o     (def) - Sprint 2\n\u23f3 Blocos indentados        - Sprint 2\n\u23f3 An\u00e1lise sem\u00e2ntica        - Sprint 2\n</code></pre>"},{"location":"SUMARIO_EXECUTIVO/#tipos-de-token-suportados-15","title":"Tipos de Token Suportados (15+)","text":"<ul> <li>Identificadores, n\u00fameros, strings</li> <li>Palavras-chave (def, if, while, True, False, etc.)</li> <li>Operadores aritm\u00e9ticos (+, -, *, //, %)</li> <li>Operadores relacionais (==, !=, &lt;, &gt;, &lt;=, &gt;=)</li> <li>Operadores l\u00f3gicos (and, or, not)</li> <li>Delimitadores (par\u00eanteses, v\u00edrgulas, dois pontos)</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#demonstracao-de-funcionamento","title":"\ud83c\udfaa Demonstra\u00e7\u00e3o de Funcionamento","text":""},{"location":"SUMARIO_EXECUTIVO/#exemplo-1-expressoes-aritmeticas","title":"Exemplo 1: Express\u00f5es Aritm\u00e9ticas","text":"<pre><code>Entrada: resultado = (10 + 5) * 2\nSa\u00edda:   assign resultado := expr\n         [OK] programa reconhecido\nStatus:  \u2705 SUCESSO\n</code></pre>"},{"location":"SUMARIO_EXECUTIVO/#exemplo-2-comando-print","title":"Exemplo 2: Comando Print","text":"<pre><code>Entrada: print(\"Hello World\")\nSa\u00edda:   print(...)\n         [OK] programa reconhecido\nStatus:  \u2705 SUCESSO\n</code></pre>"},{"location":"SUMARIO_EXECUTIVO/#exemplo-3-deteccao-de-erro","title":"Exemplo 3: Detec\u00e7\u00e3o de Erro","text":"<pre><code>Entrada: x = 5 @@ 2\nSa\u00edda:   Unexpected character: @\n         [SINTAXE] erro: syntax error\nStatus:  \u2705 ERRO DETECTADO CORRETAMENTE\n</code></pre>"},{"location":"SUMARIO_EXECUTIVO/#entregaveis-da-sprint","title":"\ud83d\udcc1 Entreg\u00e1veis da Sprint","text":""},{"location":"SUMARIO_EXECUTIVO/#codigo-funcional","title":"C\u00f3digo Funcional","text":"<ul> <li><code>pylite</code> - Execut\u00e1vel do compilador</li> <li><code>scanner.l</code> - Analisador l\u00e9xico (vers\u00e3o C funcional)</li> <li><code>parser.y</code> - Analisador sint\u00e1tico (vers\u00e3o C funcional)</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#suite-de-testes","title":"Su\u00edte de Testes","text":"<ul> <li>7 arquivos de teste Python (.c)</li> <li>4 scripts de automa\u00e7\u00e3o (.sh)</li> <li>Cobertura completa das funcionalidades atuais</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#documentacao-tecnica","title":"Documenta\u00e7\u00e3o T\u00e9cnica","text":"<ul> <li>Documenta\u00e7\u00e3o completa da Sprint (30+ p\u00e1ginas)</li> <li>Guia espec\u00edfico de testes</li> <li>Changelog detalhado</li> <li>\u00cdndice de arquivos</li> <li>Sum\u00e1rio executivo</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#limitacoes-e-decisoes-tecnicas","title":"\u26a0\ufe0f Limita\u00e7\u00f5es e Decis\u00f5es T\u00e9cnicas","text":""},{"location":"SUMARIO_EXECUTIVO/#decisoes-estrategicas","title":"Decis\u00f5es Estrat\u00e9gicas","text":"<ol> <li>Simplifica\u00e7\u00e3o do scanner: Priorizar funcionalidade sobre complexidade</li> <li>Foco em express\u00f5es: Base s\u00f3lida antes de estruturas complexas</li> <li>Vers\u00e3o incremental: Sprint 1 como foundation para Sprint 2</li> </ol>"},{"location":"SUMARIO_EXECUTIVO/#limitacoes-temporarias","title":"Limita\u00e7\u00f5es Tempor\u00e1rias","text":"<ul> <li>Blocos indentados n\u00e3o suportados (if, while, def com corpo)</li> <li>Tratamento b\u00e1sico de coment\u00e1rios</li> <li>Estruturas de dados simples apenas</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#justificativa-tecnica","title":"Justificativa T\u00e9cnica","text":"<p>Estas limita\u00e7\u00f5es s\u00e3o intencionais e estrat\u00e9gicas, permitindo: - Base s\u00f3lida e testada - Facilidade de expans\u00e3o na Sprint 2 - Redu\u00e7\u00e3o de complexidade inicial</p>"},{"location":"SUMARIO_EXECUTIVO/#impacto-e-proximos-passos","title":"\ud83d\ude80 Impacto e Pr\u00f3ximos Passos","text":""},{"location":"SUMARIO_EXECUTIVO/#impacto-atual","title":"Impacto Atual","text":"<ul> <li>\u2705 Base s\u00f3lida estabelecida para desenvolvimento futuro</li> <li>\u2705 Infraestrutura de testes permite desenvolvimento seguro</li> <li>\u2705 Documenta\u00e7\u00e3o completa facilita manuten\u00e7\u00e3o e evolu\u00e7\u00e3o</li> <li>\u2705 Problemas cr\u00edticos resolvidos (C++ \u2192 C migration)</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#roadmap-sprint-2","title":"Roadmap Sprint 2","text":"<ol> <li>Restaurar indenta\u00e7\u00e3o completa (usar scanner_backup.l)</li> <li>Implementar estruturas de controle (if/else, while)</li> <li>Adicionar defini\u00e7\u00f5es de fun\u00e7\u00e3o com blocos</li> <li>Melhorar tratamento de coment\u00e1rios</li> <li>Implementar an\u00e1lise sem\u00e2ntica inicial</li> </ol>"},{"location":"SUMARIO_EXECUTIVO/#conclusao","title":"\ud83c\udfc6 Conclus\u00e3o","text":""},{"location":"SUMARIO_EXECUTIVO/#status-geral-sprint-1-bem-sucedida","title":"Status Geral: \u2705 SPRINT 1 BEM-SUCEDIDA","text":"<p>A Sprint 1 superou as expectativas estabelecidas:</p> <ul> <li>\u2705 Todos os objetivos principais alcan\u00e7ados</li> <li>\u2705 Qualidade t\u00e9cnica alta (compila\u00e7\u00e3o sem erros cr\u00edticos)</li> <li>\u2705 Cobertura de testes abrangente (100% das funcionalidades atuais)</li> <li>\u2705 Documenta\u00e7\u00e3o t\u00e9cnica completa (5 documentos)</li> <li>\u2705 Base s\u00f3lida para expans\u00e3o futura</li> </ul>"},{"location":"SUMARIO_EXECUTIVO/#proxima-etapa","title":"Pr\u00f3xima Etapa","text":"<p>O projeto est\u00e1 pronto para a Sprint 2, com: - Infraestrutura t\u00e9cnica estabelecida - Processo de testes validado - Documenta\u00e7\u00e3o base criada - Problemas cr\u00edticos resolvidos</p>"},{"location":"SUMARIO_EXECUTIVO/#recomendacao","title":"Recomenda\u00e7\u00e3o","text":"<p>Prosseguir para Sprint 2 com confian\u00e7a, focando na implementa\u00e7\u00e3o de estruturas de controle e blocos indentados.</p> <p>Preparado por: Equipe de Desenvolvimento Aprovado para: Sprint 2 Data: 14 de Setembro de 2025</p>"},{"location":"linguagem-fonte-c/","title":"\ud83d\udcd6 Especifica\u00e7\u00e3o da Linguagem-Fonte C","text":""},{"location":"linguagem-fonte-c/#compilador-c-python","title":"Compilador C \u2192 Python","text":"<p>Este documento define o subconjunto da linguagem C que ser\u00e1 a linguagem fonte do nosso compilador, incluindo tokens, estruturas sint\u00e1ticas, sem\u00e2ntica e exemplos de tradu\u00e7\u00e3o para Python.</p>"},{"location":"linguagem-fonte-c/#especificacao-de-tokens","title":"\ud83d\udd24 Especifica\u00e7\u00e3o de Tokens","text":""},{"location":"linguagem-fonte-c/#palavras-chave-keywords","title":"Palavras-Chave (Keywords)","text":"<pre><code>// Tipos de dados\nint float char void\n\n// Estruturas de controle\nif else while for do switch case default break continue\n\n// Fun\u00e7\u00f5es e escopo\nreturn\n\n// Inclus\u00f5es (limitado)\n#include\n\n// Entrada/Sa\u00edda\nprintf scanf\n\n// Valores especiais\nNULL\n</code></pre>"},{"location":"linguagem-fonte-c/#operadores","title":"Operadores","text":""},{"location":"linguagem-fonte-c/#aritmeticos","title":"Aritm\u00e9ticos","text":"<pre><code>+    // Adi\u00e7\u00e3o\n-    // Subtra\u00e7\u00e3o\n*    // Multiplica\u00e7\u00e3o\n/    // Divis\u00e3o\n%    // M\u00f3dulo\n++   // Incremento\n--   // Decremento\n</code></pre>"},{"location":"linguagem-fonte-c/#relacionais","title":"Relacionais","text":"<pre><code>==   // Igual\n!=   // Diferente\n&lt;    // Menor\n&lt;=   // Menor ou igual\n&gt;    // Maior\n&gt;=   // Maior ou igual\n</code></pre>"},{"location":"linguagem-fonte-c/#logicos","title":"L\u00f3gicos","text":"<pre><code>&amp;&amp;   // E l\u00f3gico\n||   // OU l\u00f3gico\n!    // N\u00c3O l\u00f3gico\n</code></pre>"},{"location":"linguagem-fonte-c/#atribuicao","title":"Atribui\u00e7\u00e3o","text":"<pre><code>=    // Atribui\u00e7\u00e3o simples\n+=   // Atribui\u00e7\u00e3o com adi\u00e7\u00e3o\n-=   // Atribui\u00e7\u00e3o com subtra\u00e7\u00e3o\n*=   // Atribui\u00e7\u00e3o com multiplica\u00e7\u00e3o\n/=   // Atribui\u00e7\u00e3o com divis\u00e3o\n</code></pre>"},{"location":"linguagem-fonte-c/#delimitadores","title":"Delimitadores","text":"<pre><code>{    }    // Chaves (blocos)\n(    )    // Par\u00eanteses (express\u00f5es, fun\u00e7\u00f5es)\n[    ]    // Colchetes (arrays)\n;         // Ponto e v\u00edrgula (fim de statement)\n,         // V\u00edrgula (separador)\n</code></pre>"},{"location":"linguagem-fonte-c/#literais","title":"Literais","text":""},{"location":"linguagem-fonte-c/#numeros-inteiros","title":"N\u00fameros Inteiros","text":"<pre><code>42       // Decimal\n0x2A     // Hexadecimal\n052      // Octal\n</code></pre>"},{"location":"linguagem-fonte-c/#numeros-de-ponto-flutuante","title":"N\u00fameros de Ponto Flutuante","text":"<pre><code>3.14     // Float simples\n2.5f     // Float com sufixo\n1.23e-4  // Nota\u00e7\u00e3o cient\u00edfica\n</code></pre>"},{"location":"linguagem-fonte-c/#caracteres","title":"Caracteres","text":"<pre><code>'a'      // Caractere simples\n'\\n'     // Caractere de escape\n'\\0'     // Caractere nulo\n</code></pre>"},{"location":"linguagem-fonte-c/#strings","title":"Strings","text":"<pre><code>\"Hello\"          // String simples\n\"Hello\\nWorld\"   // String com escape\n\"\"               // String vazia\n</code></pre>"},{"location":"linguagem-fonte-c/#identificadores","title":"Identificadores","text":"<pre><code>// Formato: [a-zA-Z_][a-zA-Z0-9_]*\nvariavel\n_contador\nMAX_SIZE\nfuncao1\narray_dados\n</code></pre>"},{"location":"linguagem-fonte-c/#estruturas-sintaticas-suportadas","title":"\ud83c\udfd7\ufe0f Estruturas Sint\u00e1ticas Suportadas","text":""},{"location":"linguagem-fonte-c/#1-declaracoes-de-variaveis","title":"1. Declara\u00e7\u00f5es de Vari\u00e1veis","text":""},{"location":"linguagem-fonte-c/#declaracao-simples","title":"Declara\u00e7\u00e3o Simples","text":"<p>C:</p> <pre><code>int x;\nfloat y;\nchar c;\n</code></pre> <p>Python:</p> <pre><code>x = 0        # int inicializado com 0\ny = 0.0      # float inicializado com 0.0\nc = '\\0'     # char inicializado com char nulo\n</code></pre>"},{"location":"linguagem-fonte-c/#declaracao-com-inicializacao","title":"Declara\u00e7\u00e3o com Inicializa\u00e7\u00e3o","text":"<p>C:</p> <pre><code>int x = 10;\nfloat pi = 3.14;\nchar letra = 'A';\n</code></pre> <p>Python:</p> <pre><code>x = 10\npi = 3.14\nletra = 'A'\n</code></pre>"},{"location":"linguagem-fonte-c/#arrays","title":"Arrays","text":"<p>C:</p> <pre><code>int numeros[5];\nint valores[3] = {1, 2, 3};\nchar nome[10];\n</code></pre> <p>Python:</p> <pre><code>numeros = [0] * 5\nvalores = [1, 2, 3]\nnome = ['\\0'] * 10\n</code></pre>"},{"location":"linguagem-fonte-c/#2-expressoes","title":"2. Express\u00f5es","text":""},{"location":"linguagem-fonte-c/#aritmeticas","title":"Aritm\u00e9ticas","text":"<p>C:</p> <pre><code>resultado = a + b * c;\nx = (y + z) / 2;\ncontador++;\nvalor *= 3;\n</code></pre> <p>Python:</p> <pre><code>resultado = a + b * c\nx = (y + z) // 2      # Divis\u00e3o inteira quando apropriado\ncontador += 1\nvalor *= 3\n</code></pre>"},{"location":"linguagem-fonte-c/#relacionais-e-logicas","title":"Relacionais e L\u00f3gicas","text":"<p>C:</p> <pre><code>if (x &gt; 0 &amp;&amp; y &lt; 10) {\n    // c\u00f3digo\n}\n\nbool resultado = (a == b) || (c != d);\n</code></pre> <p>Python:</p> <pre><code>if x &gt; 0 and y &lt; 10:\n    # c\u00f3digo\n    pass\n\nresultado = (a == b) or (c != d)\n</code></pre>"},{"location":"linguagem-fonte-c/#3-estruturas-de-controle","title":"3. Estruturas de Controle","text":""},{"location":"linguagem-fonte-c/#ifelse","title":"If/Else","text":"<p>C:</p> <pre><code>if (condicao) {\n    printf(\"Verdadeiro\\n\");\n} else if (outra_condicao) {\n    printf(\"Outra\\n\");\n} else {\n    printf(\"Falso\\n\");\n}\n</code></pre> <p>Python:</p> <pre><code>if condicao:\n    print(\"Verdadeiro\")\nelif outra_condicao:\n    print(\"Outra\")\nelse:\n    print(\"Falso\")\n</code></pre>"},{"location":"linguagem-fonte-c/#while","title":"While","text":"<p>C:</p> <pre><code>while (i &lt; 10) {\n    printf(\"%d\\n\", i);\n    i++;\n}\n</code></pre> <p>Python:</p> <pre><code>while i &lt; 10:\n    print(i)\n    i += 1\n</code></pre>"},{"location":"linguagem-fonte-c/#for","title":"For","text":"<p>C:</p> <pre><code>for (int i = 0; i &lt; 10; i++) {\n    printf(\"%d\\n\", i);\n}\n</code></pre> <p>Python:</p> <pre><code>for i in range(10):\n    print(i)\n</code></pre>"},{"location":"linguagem-fonte-c/#4-funcoes","title":"4. Fun\u00e7\u00f5es","text":""},{"location":"linguagem-fonte-c/#definicao-de-funcao","title":"Defini\u00e7\u00e3o de Fun\u00e7\u00e3o","text":"<p>C:</p> <pre><code>int somar(int a, int b) {\n    return a + b;\n}\n\nvoid imprimir_msg(char* mensagem) {\n    printf(\"%s\\n\", mensagem);\n}\n</code></pre> <p>Python:</p> <pre><code>def somar(a, b):\n    return a + b\n\ndef imprimir_msg(mensagem):\n    print(mensagem)\n</code></pre>"},{"location":"linguagem-fonte-c/#funcao-main","title":"Fun\u00e7\u00e3o Main","text":"<p>C:</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}\n</code></pre> <p>Python:</p> <pre><code>def main():\n    print(\"Hello World\")\n    return 0\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"linguagem-fonte-c/#5-entrada-e-saida","title":"5. Entrada e Sa\u00edda","text":""},{"location":"linguagem-fonte-c/#printf","title":"Printf","text":"<p>C:</p> <pre><code>printf(\"Numero: %d\\n\", x);\nprintf(\"Float: %.2f\\n\", y);\nprintf(\"Char: %c\\n\", c);\nprintf(\"String: %s\\n\", str);\n</code></pre> <p>Python:</p> <pre><code>print(f\"Numero: {x}\")\nprint(f\"Float: {y:.2f}\")\nprint(f\"Char: {c}\")\nprint(f\"String: {str}\")\n</code></pre>"},{"location":"linguagem-fonte-c/#scanf-simplificado","title":"Scanf (Simplificado)","text":"<p>C:</p> <pre><code>scanf(\"%d\", &amp;x);\nscanf(\"%f\", &amp;y);\n</code></pre> <p>Python:</p> <pre><code>x = int(input())\ny = float(input())\n</code></pre>"},{"location":"linguagem-fonte-c/#gramatica-formal-bnf","title":"\ud83d\udccb Gram\u00e1tica Formal (BNF)","text":""},{"location":"linguagem-fonte-c/#programa","title":"Programa","text":"<pre><code>program         \u2192 declaration_list\n\ndeclaration_list \u2192 declaration_list declaration\n                 | declaration\n\ndeclaration     \u2192 var_declaration\n                | fun_declaration\n                | include_declaration\n\ninclude_declaration \u2192 '#include' '&lt;' ID '&gt;'\n                    | '#include' STRING_LIT\n</code></pre>"},{"location":"linguagem-fonte-c/#declaracoes-de-variaveis","title":"Declara\u00e7\u00f5es de Vari\u00e1veis","text":"<pre><code>var_declaration \u2192 type_specifier ID ';'\n                | type_specifier ID '=' expression ';'\n                | type_specifier ID '[' INT_LIT ']' ';'\n                | type_specifier ID '[' INT_LIT ']' '=' '{' expression_list '}' ';'\n\ntype_specifier  \u2192 'int' | 'float' | 'char' | 'void'\n</code></pre>"},{"location":"linguagem-fonte-c/#declaracoes-de-funcoes","title":"Declara\u00e7\u00f5es de Fun\u00e7\u00f5es","text":"<pre><code>fun_declaration \u2192 type_specifier ID '(' params ')' compound_stmt\n\nparams          \u2192 param_list | 'void' | \u03b5\n\nparam_list      \u2192 param_list ',' param\n                | param\n\nparam           \u2192 type_specifier ID\n                | type_specifier ID '[' ']'\n</code></pre>"},{"location":"linguagem-fonte-c/#comandos","title":"Comandos","text":"<pre><code>compound_stmt   \u2192 '{' local_declarations statement_list '}'\n\nstatement_list  \u2192 statement_list statement\n                | \u03b5\n\nstatement       \u2192 expression_stmt\n                | compound_stmt\n                | selection_stmt\n                | iteration_stmt\n                | return_stmt\n\nexpression_stmt \u2192 expression ';'\n                | ';'\n\nselection_stmt  \u2192 'if' '(' expression ')' statement\n                | 'if' '(' expression ')' statement 'else' statement\n\niteration_stmt  \u2192 'while' '(' expression ')' statement\n                | 'for' '(' expression_stmt expression_stmt expression ')' statement\n\nreturn_stmt     \u2192 'return' ';'\n                | 'return' expression ';'\n</code></pre>"},{"location":"linguagem-fonte-c/#expressoes","title":"Express\u00f5es","text":"<pre><code>expression      \u2192 var '=' expression\n                | simple_expression\n\nsimple_expression \u2192 additive_expression relop additive_expression\n                  | additive_expression\n\nrelop           \u2192 '&lt;=' | '&lt;' | '&gt;' | '&gt;=' | '==' | '!='\n\nadditive_expression \u2192 additive_expression addop term\n                    | term\n\naddop           \u2192 '+' | '-'\n\nterm            \u2192 term mulop factor\n                | factor\n\nmulop           \u2192 '*' | '/' | '%'\n\nfactor          \u2192 '(' expression ')'\n                | var\n                | call\n                | INT_LIT\n                | FLOAT_LIT\n                | CHAR_LIT\n\ncall            \u2192 ID '(' args ')'\n\nargs            \u2192 arg_list | \u03b5\n\narg_list        \u2192 arg_list ',' expression\n                | expression\n\nvar             \u2192 ID\n                | ID '[' expression ']'\n</code></pre>"},{"location":"linguagem-fonte-c/#mapeamento-de-tipos-c-python","title":"\ud83c\udfaf Mapeamento de Tipos C \u2192 Python","text":"Tipo C Tipo Python Inicializa\u00e7\u00e3o Observa\u00e7\u00f5es <code>int</code> <code>int</code> <code>0</code> N\u00fameros inteiros <code>float</code> <code>float</code> <code>0.0</code> N\u00fameros de ponto flutuante <code>char</code> <code>str</code> <code>'\\0'</code> Caractere \u00fanico como string <code>char[]</code> <code>list[str]</code> <code>['\\0'] * size</code> Array de caracteres <code>int[]</code> <code>list[int]</code> <code>[0] * size</code> Array de inteiros <code>void</code> <code>None</code> - Tipo de retorno vazio"},{"location":"linguagem-fonte-c/#tratamento-de-erros","title":"\ud83d\udea8 Tratamento de Erros","text":""},{"location":"linguagem-fonte-c/#erros-lexicos","title":"Erros L\u00e9xicos","text":"<ul> <li>Caracteres n\u00e3o reconhecidos</li> <li>Literais malformados</li> <li>Coment\u00e1rios n\u00e3o fechados</li> </ul>"},{"location":"linguagem-fonte-c/#erros-sintaticos","title":"Erros Sint\u00e1ticos","text":"<ul> <li>Par\u00eanteses n\u00e3o balanceados</li> <li>Chaves n\u00e3o balanceadas</li> <li>Ponto e v\u00edrgula ausente</li> <li>Estrutura de fun\u00e7\u00e3o inv\u00e1lida</li> </ul>"},{"location":"linguagem-fonte-c/#erros-semanticos","title":"Erros Sem\u00e2nticos","text":"<ul> <li>Vari\u00e1vel n\u00e3o declarada</li> <li>Redeclara\u00e7\u00e3o de vari\u00e1vel</li> <li>Tipo incompat\u00edvel em atribui\u00e7\u00e3o</li> <li>Fun\u00e7\u00e3o n\u00e3o declarada</li> <li>N\u00famero incorreto de argumentos</li> </ul>"},{"location":"linguagem-fonte-c/#limitacoes-do-subconjunto-c","title":"\ud83d\udcca Limita\u00e7\u00f5es do Subconjunto C","text":""},{"location":"linguagem-fonte-c/#nao-suportado-versao-inicial","title":"N\u00e3o Suportado (Vers\u00e3o Inicial)","text":"<ul> <li>Ponteiros (<code>*</code>, <code>&amp;</code>)</li> <li>Estruturas (<code>struct</code>)</li> <li>Uni\u00f5es (<code>union</code>)</li> <li>Enumera\u00e7\u00f5es (<code>enum</code>)</li> <li>Arquivos m\u00faltiplos</li> <li>Preprocessador complexo</li> <li>Bibliotecas externas (al\u00e9m de stdio.h b\u00e1sico)</li> <li>Recurs\u00e3o complexa</li> <li>Arrays multidimensionais</li> <li>Strings como <code>char*</code></li> </ul>"},{"location":"linguagem-fonte-c/#funcionalidades-futuras-sprints-posteriores","title":"Funcionalidades Futuras (Sprints Posteriores)","text":"<ul> <li>Ponteiros b\u00e1sicos</li> <li>Estruturas simples</li> <li>Arrays multidimensionais</li> <li>Mais bibliotecas padr\u00e3o</li> <li>Otimiza\u00e7\u00f5es de c\u00f3digo</li> </ul>"},{"location":"linguagem-fonte-c/#casos-de-teste-representativos","title":"\ud83e\uddea Casos de Teste Representativos","text":""},{"location":"linguagem-fonte-c/#teste-1-programa-basico","title":"Teste 1: Programa B\u00e1sico","text":"<p>Entrada:</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int x = 10;\n    int y = 20;\n    int soma = x + y;\n    printf(\"Soma: %d\\n\", soma);\n    return 0;\n}\n</code></pre>"},{"location":"linguagem-fonte-c/#teste-2-funcao-com-parametros","title":"Teste 2: Fun\u00e7\u00e3o com Par\u00e2metros","text":"<p>Entrada:</p> <pre><code>int multiplicar(int a, int b) {\n    return a * b;\n}\n\nint main() {\n    int resultado = multiplicar(5, 3);\n    printf(\"Resultado: %d\\n\", resultado);\n    return 0;\n}\n</code></pre>"},{"location":"linguagem-fonte-c/#teste-3-estruturas-de-controle","title":"Teste 3: Estruturas de Controle","text":"<p>Entrada:</p> <pre><code>int main() {\n    for (int i = 1; i &lt;= 10; i++) {\n        if (i % 2 == 0) {\n            printf(\"%d \u00e9 par\\n\", i);\n        } else {\n            printf(\"%d \u00e9 \u00edmpar\\n\", i);\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"linguagem-fonte-c/#teste-4-arrays","title":"Teste 4: Arrays","text":"<p>Entrada:</p> <pre><code>int main() {\n    int numeros[5] = {1, 2, 3, 4, 5};\n    int soma = 0;\n\n    for (int i = 0; i &lt; 5; i++) {\n        soma += numeros[i];\n    }\n\n    printf(\"Soma: %d\\n\", soma);\n    return 0;\n}\n</code></pre> <p>Vers\u00e3o: 1.0 Data: 17 de Setembro de 2025 Equipe: Grupo 10 - Compiladores 1</p>"},{"location":"sobre/","title":"O que vamos fazer?","text":"<p>Nosso grupo ir\u00e1 desenvolver um compilador que transforma c\u00f3digo em C em c\u00f3digo equivalente em Python. O projeto consiste em construir um lexer, um parser e um gerador de c\u00f3digo, capazes de interpretar um subconjunto da linguagem C e produzir scripts Python que preservem a l\u00f3gica e o comportamento do programa original. O compilador ter\u00e1 suporte a elementos essenciais como: declara\u00e7\u00f5es de vari\u00e1veis, express\u00f5es aritm\u00e9ticas, estruturas de controle (if, while e for), fun\u00e7\u00f5es simples e opera\u00e7\u00f5es b\u00e1sicas de entrada e sa\u00edda (printf e scanf simplificado). A ideia \u00e9 criar uma base funcional m\u00ednima que permita testes iniciais, sendo expandida, ao decorrer das sprints, para suportar recursos mais avan\u00e7ados do C.</p>"},{"location":"sobre/#por-que-da-escolha","title":"Por que da escolha?","text":"<p>Escolhemos desenvolver um compilador de C para Python por diversos motivos, os quais incluem:</p> <ol> <li> <p>Aprendizado pr\u00e1tico: Trabalhar com duas linguagens diferentes, al\u00e9m de ser um desafio maior para os integrantes da equipe, permite compreender profundamente conceitos de compila\u00e7\u00e3o, an\u00e1lise l\u00e9xica, sint\u00e1tica e gera\u00e7\u00e3o de c\u00f3digo.</p> </li> <li> <p>Subconjunto de C control\u00e1vel: C possui uma sintaxe clara e estruturada, o que facilita definir um subconjunto inicial para o projeto, sem a complexidade total da linguagem.</p> </li> <li> <p>Versatilidade do Python: Python \u00e9 interpretado, de alto n\u00edvel e de f\u00e1cil leitura, logo, gerar c\u00f3digo Python a partir de C ajuda a visualizar de forma r\u00e1pida o funcionamento do c\u00f3digo transpilado e facilita testes.</p> </li> <li> <p>Familiaridade do grupo com as linguagens: Os integrantes j\u00e1 possuem experi\u00eancia pr\u00e9via com C e Python, o que facilita a implementa\u00e7\u00e3o e valida\u00e7\u00e3o do compilador, tornando o desenvolvimento mais eficiente e confi\u00e1vel.</p> </li> <li> <p>Escolha por compilador: A equipe optou por desenvolver um compilador, e n\u00e3o um interpretador, para alinhar o projeto ao principal foco da disciplina (visto que o nome da disciplina \u00e9 \"Compiladores 1\"), que aborda conceitos de compila\u00e7\u00e3o, gera\u00e7\u00e3o de c\u00f3digo e an\u00e1lise l\u00e9xica/sint\u00e1tica de forma mais profunda.</p> </li> </ol>"},{"location":"sobre/#organizacao-do-projeto","title":"Organiza\u00e7\u00e3o do Projeto","text":""},{"location":"sobre/#ferramenta-de-gerenciamento","title":"Ferramenta de Gerenciamento","text":"<p>Optamos por utilizar o Kanban dispon\u00edvel no Projects para organizar e acompanhar as tarefas do projeto. Essa ferramenta permite visualizar o progresso em colunas, facilitando o controle das atividades em andamento.</p> <p>\ud83d\udc49 Acesse o Kanban do Projeto aqui</p>"},{"location":"atas/ata01/","title":"\ud83d\udcdd Ata de reuni\u00e3o Compiladores 1 - Grupo 10","text":""},{"location":"atas/ata01/#identificacao-da-reuniao","title":"\ud83d\udccc Identifica\u00e7\u00e3o da Reuni\u00e3o","text":"<ul> <li>Data:  08/09/2025</li> <li>Hora de In\u00edcio:  20h00</li> <li>Hora de T\u00e9rmino:  20h34</li> <li>Local:  Teams (online)</li> <li>Redator: Davi Camilo e Tiago Antunes Balieiro</li> </ul>"},{"location":"atas/ata01/#participantes","title":"\ud83d\udc65 Participantes","text":"Nome Presente? Ana Elisa Ramos \u2611 Sim / \u2610 N\u00e3o Arthur Carvalho \u2611 Sim / \u2610 N\u00e3o Davi Camilo Menezes \u2611 Sim / \u2610 N\u00e3o Euller J\u00falio da Silva \u2611 Sim / \u2610 N\u00e3o Tiago Antunes Balieiro \u2611 Sim / \u2610 N\u00e3o"},{"location":"atas/ata01/#pauta-da-reuniao-discussao","title":"\ud83d\uddc2\ufe0f Pauta da Reuni\u00e3o (Discuss\u00e3o)","text":"<p>Lista de assuntos a serem discutidos.</p> N\u00ba Descri\u00e7\u00e3o 1 Revisar as sprints. 2 Definir escopo do grupo. 3 Dividir as tarefas entre as partes."},{"location":"atas/ata01/#pendencias-anteriores","title":"\ud83d\udd01 Pend\u00eancias Anteriores","text":"<p>Pend\u00eancias de reuni\u00f5es anteriores ainda n\u00e3o resolvidas.</p> N\u00ba Pend\u00eancia Respons\u00e1vel Prazo 1 - - -"},{"location":"atas/ata01/#assuntos-tratados-decisoes","title":"\ud83d\udde3\ufe0f Assuntos Tratados (Decis\u00f5es)","text":"<p>Registros das decis\u00f5es e defini\u00e7\u00f5es abordadas na reuni\u00e3o, seguindo a numera\u00e7\u00e3o da pauta.</p> N\u00ba Descri\u00e7\u00e3o Tipo 1 Foi lido o cronograma sugerido de sprints para o desenvolvimento de um compilador sugerido pelo professor, que pode ser acessado no seguinte link: Guia - Projeto de um compilador. Apresenta\u00e7\u00e3o 2 O escopo do nosso projeto foi definido, ap\u00f3s discuss\u00e3o entre todos os membros do grupo. Decis\u00e3o 3 Com base no escopo definido e na avalia\u00e7\u00e3o das sprints, foram atribuidas atividades para cada um dos membros. Defini\u00e7\u00e3o"},{"location":"atas/ata01/#descricao-dos-tipos","title":"Descri\u00e7\u00e3o dos tipos:","text":"<ul> <li>Apresenta\u00e7\u00e3o: Exposi\u00e7\u00e3o de tema, sem necessidade de aprova\u00e7\u00e3o.</li> <li>Decis\u00e3o: Aprovado sem impactos em custo/prazo.</li> <li>Defini\u00e7\u00e3o: Impacta custo/prazo, mas j\u00e1 est\u00e1 aprovada.</li> <li>Solicita\u00e7\u00e3o: Sujeita a an\u00e1lise de viabilidade.</li> <li>Pend\u00eancia: Quest\u00e3o em aberto, a ser discutida.</li> </ul>"},{"location":"atas/ata01/#link-da-gravacao","title":"\ud83c\udfa5 Link da grava\u00e7\u00e3o","text":"<ul> <li>...</li> </ul>"},{"location":"atas/ata01/#proxima-reuniao","title":"\ud83d\udcc6 Pr\u00f3xima Reuni\u00e3o","text":"<ul> <li>Data: --/--/2025 </li> <li>Hora: --h</li> </ul>"},{"location":"atas/ata01/#compromissos","title":"\u2705 Compromissos","text":"<p>Compromissos a serem feitos, com prazos e respons\u00e1veis.</p> N\u00ba Compromisso Respons\u00e1vel Prazo 1 Cria\u00e7\u00e3o de arquivos iniciais. Arthur Carvalho 15/09 2 Cria\u00e7\u00e3o de p\u00e1gina inicial no GitPages. Davi Camilo Menezes 15/09 3 Cria\u00e7\u00e3o da ata da reuni\u00e3o no GitPages. Tiago Antunes Balieiro 15/09 4 Cria\u00e7\u00e3o do Readme do reposit\u00f3rio. Ana Elisa Ramos 15/09 5 Testes dos arquivos da sprint 1. Euller J\u00falio da Silva 15/09"},{"location":"atas/ata01/#historico-de-versao","title":"Hist\u00f3rico de Vers\u00e3o","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) <code>1.0</code> 15/09/2025 Cria\u00e7\u00e3o do Documento Tiago Antunes Davi Camilo"},{"location":"atas/ata02/","title":"\ud83d\udcdd Ata de reuni\u00e3o Compiladores 1 - Grupo 10","text":""},{"location":"atas/ata02/#identificacao-da-reuniao","title":"\ud83d\udccc Identifica\u00e7\u00e3o da Reuni\u00e3o","text":"<ul> <li>Data:  17/09/2025</li> <li>Hora de In\u00edcio:  14h30</li> <li>Hora de T\u00e9rmino:  15h29</li> <li>Local:  Sala de Aula (Presencial)</li> <li>Redator: Tiago Antunes Balieiro</li> </ul>"},{"location":"atas/ata02/#participantes","title":"\ud83d\udc65 Participantes","text":"Nome Presente? Ana Elisa Ramos \u2610 Sim / \u2611 N\u00e3o Arthur Carvalho \u2610 Sim / \u2611 N\u00e3o Davi Camilo Menezes \u2611 Sim / \u2610 N\u00e3o Euller J\u00falio da Silva \u2611 Sim / \u2610 N\u00e3o Tiago Antunes Balieiro \u2611 Sim / \u2610 N\u00e3o"},{"location":"atas/ata02/#pauta-da-reuniao-discussao","title":"\ud83d\uddc2\ufe0f Pauta da Reuni\u00e3o (Discuss\u00e3o)","text":"<p>Lista de assuntos a serem discutidos.</p> N\u00ba Descri\u00e7\u00e3o 1 Revisar todo o projeto. 2 Revisar e redefinir novas sprints. 3 Dividir as tarefas entre as partes."},{"location":"atas/ata02/#pendencias-anteriores","title":"\ud83d\udd01 Pend\u00eancias Anteriores","text":"<p>Pend\u00eancias de reuni\u00f5es anteriores ainda n\u00e3o resolvidas.</p> N\u00ba Pend\u00eancia Respons\u00e1vel Prazo 1 - - -"},{"location":"atas/ata02/#assuntos-tratados-decisoes","title":"\ud83d\udde3\ufe0f Assuntos Tratados (Decis\u00f5es)","text":"<p>Registros das decis\u00f5es e defini\u00e7\u00f5es abordadas na reuni\u00e3o, seguindo a numera\u00e7\u00e3o da pauta.</p> N\u00ba Descri\u00e7\u00e3o Tipo 1 Revis\u00e3o dos arquivos feitos. Apresenta\u00e7\u00e3o 2 Definidas as mudan\u00e7as necess\u00e1rias. Decis\u00e3o"},{"location":"atas/ata02/#descricao-dos-tipos","title":"Descri\u00e7\u00e3o dos tipos:","text":"<ul> <li>Apresenta\u00e7\u00e3o: Exposi\u00e7\u00e3o de tema, sem necessidade de aprova\u00e7\u00e3o.</li> <li>Decis\u00e3o: Aprovado sem impactos em custo/prazo.</li> <li>Defini\u00e7\u00e3o: Impacta custo/prazo, mas j\u00e1 est\u00e1 aprovada.</li> <li>Solicita\u00e7\u00e3o: Sujeita a an\u00e1lise de viabilidade.</li> <li>Pend\u00eancia: Quest\u00e3o em aberto, a ser discutida.</li> </ul>"},{"location":"atas/ata02/#link-da-gravacao","title":"\ud83c\udfa5 Link da grava\u00e7\u00e3o","text":"<ul> <li>...</li> </ul>"},{"location":"atas/ata02/#proxima-reuniao","title":"\ud83d\udcc6 Pr\u00f3xima Reuni\u00e3o","text":"<ul> <li>Data: --/--/2025 </li> <li>Hora: --h</li> </ul>"},{"location":"atas/ata02/#compromissos","title":"\u2705 Compromissos","text":"<p>Compromissos a serem feitos, com prazos e respons\u00e1veis.</p> N\u00ba Compromisso Respons\u00e1vel Prazo 1 Corrigir o Gitpages e Refazer os testes na linguagem correta. Arthur Carvalho 24/09 2 Corrigir o arquivo lexer.l inicial e fazer os slides. Davi Camilo Menezes 24/09 3 Corrigir o arquivo parser.y e terminar o arquivo lexer.l. Tiago Antunes Balieiro 24/09 4 Documento inicial descrevendo a linguagem (tokens, estruturas, exemplos de c\u00f3digo) e avan\u00e7ar no arquivo parser.y. Euller J\u00falio da Silva 24/09"},{"location":"atas/ata02/#historico-de-versao","title":"Hist\u00f3rico de Vers\u00e3o","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) <code>1.0</code> 17/09/2025 Cria\u00e7\u00e3o do Documento Tiago Antunes Euller J\u00falio da Silva <code>1.1</code> 17/09/2025 Corre\u00e7\u00e3o das datas do prazo Davi Camilo Tiago Antunes"},{"location":"atas/ata03/","title":"\ud83d\udcdd Ata de reuni\u00e3o Compiladores 1 - Grupo 10","text":""},{"location":"atas/ata03/#identificacao-da-reuniao","title":"\ud83d\udccc Identifica\u00e7\u00e3o da Reuni\u00e3o","text":"<ul> <li>Data:  28/09/2025</li> <li>Hora de In\u00edcio:  16h10</li> <li>Hora de T\u00e9rmino:  17h24</li> <li>Local:  Microsoft Teams (online)</li> <li>Redator: Tiago Antunes Balieiro</li> </ul>"},{"location":"atas/ata03/#participantes","title":"\ud83d\udc65 Participantes","text":"Nome Presente? Ana Elisa Ramos \u2611 Sim / \u2610 N\u00e3o Arthur Carvalho \u2611 Sim / \u2610 N\u00e3o Davi Camilo Menezes \u2611 Sim / \u2610 N\u00e3o Euller J\u00falio da Silva \u2611 Sim / \u2610 N\u00e3o Tiago Antunes Balieiro \u2611 Sim / \u2610 N\u00e3o"},{"location":"atas/ata03/#pauta-da-reuniao-discussao","title":"\ud83d\uddc2\ufe0f Pauta da Reuni\u00e3o (Discuss\u00e3o)","text":"<p>Lista de assuntos a serem discutidos.</p> N\u00ba Descri\u00e7\u00e3o 1 Alinhamento das Sprints. 2 Atualizar os membros sobre o projeto. 3 Preenchimento do formul\u00e1rio do Ponto de Controle 1."},{"location":"atas/ata03/#pendencias-anteriores","title":"\ud83d\udd01 Pend\u00eancias Anteriores","text":"<p>Pend\u00eancias de reuni\u00f5es anteriores ainda n\u00e3o resolvidas.</p> N\u00ba Pend\u00eancia Respons\u00e1vel Prazo 1 - - -"},{"location":"atas/ata03/#assuntos-tratados-decisoes","title":"\ud83d\udde3\ufe0f Assuntos Tratados (Decis\u00f5es)","text":"<p>Registros das decis\u00f5es e defini\u00e7\u00f5es abordadas na reuni\u00e3o, seguindo a numera\u00e7\u00e3o da pauta.</p> N\u00ba Descri\u00e7\u00e3o Tipo 1 Tarefas finais para o PC1. Defini\u00e7\u00e3o"},{"location":"atas/ata03/#descricao-dos-tipos","title":"Descri\u00e7\u00e3o dos tipos:","text":"<ul> <li>Apresenta\u00e7\u00e3o: Exposi\u00e7\u00e3o de tema, sem necessidade de aprova\u00e7\u00e3o.</li> <li>Decis\u00e3o: Aprovado sem impactos em custo/prazo.</li> <li>Defini\u00e7\u00e3o: Impacta custo/prazo, mas j\u00e1 est\u00e1 aprovada.</li> <li>Solicita\u00e7\u00e3o: Sujeita a an\u00e1lise de viabilidade.</li> <li>Pend\u00eancia: Quest\u00e3o em aberto, a ser discutida.</li> </ul>"},{"location":"atas/ata03/#link-da-gravacao","title":"\ud83c\udfa5 Link da grava\u00e7\u00e3o","text":"<ul> <li>...</li> </ul>"},{"location":"atas/ata03/#proxima-reuniao","title":"\ud83d\udcc6 Pr\u00f3xima Reuni\u00e3o","text":"<ul> <li>Data: --/--/2025 </li> <li>Hora: --h</li> </ul>"},{"location":"atas/ata03/#compromissos","title":"\u2705 Compromissos","text":"<p>Compromissos a serem feitos, com prazos e respons\u00e1veis.</p> N\u00ba Compromisso Respons\u00e1vel Prazo 1 Finalizar testes. Arthur Carvalho 30/09 2 Preencher ata da reuni\u00e3o e subir no Gitpages Tiago Antunes Balieiro 30/09 4 Documenta\u00e7\u00e3o sobre o Kanban Ana Elisa Ramos 30/09"},{"location":"atas/ata03/#historico-de-versao","title":"Hist\u00f3rico de Vers\u00e3o","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) Revisor(es) <code>1.0</code> 29/09/2025 Cria\u00e7\u00e3o do Documento Tiago Antunes Euller J\u00falio da Silva"}]}